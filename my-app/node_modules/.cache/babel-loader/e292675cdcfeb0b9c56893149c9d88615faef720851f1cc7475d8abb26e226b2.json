{"ast":null,"code":"var _jsxFileName = \"/Users/ethanreynolds/Documents/Pet Projects/Rally-Metrics/my-app/src/component/Breakdown/Breakdown.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { getBreakdownData } from \"../../api/api\";\nimport { WorkBreakdownByIteration } from \"../WorkBreakdown\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function BreakdownData() {\n  _s();\n  const navigate = useNavigate();\n  const id = useParams().id;\n  const g = {\n    storyType: 'string',\n    totalStories: 0,\n    totalPoints: 0,\n    iterationName: ''\n  };\n  const [data2, setData2] = useState([g]);\n  const [x, setX] = useState([]);\n  const [y, setY] = useState([]);\n  const [y1, setY1] = useState([]);\n  const [iterationName, setIterationName] = useState('Getting iteration data...');\n  let arr1 = [];\n  let arr3 = [];\n  let arr2 = [];\n  function handleHistory() {\n    getBreakdownData(id).then(json => setData2(json));\n  }\n  useEffect(() => {\n    handleHistory();\n  }, []);\n  useEffect(() => {\n    data2.map(d => {\n      arr1.push(d.totalStories);\n      arr3.push(d.totalPoints);\n      arr2.push(d.storyType);\n    });\n    setY(arr1);\n    setX(arr2);\n    setY1(arr3);\n    setIterationName(data2[0].iterationName);\n  }, [data2]);\n  const handleVelocityClick = () => {\n    navigate(\"/velocity\");\n  };\n  const handleBreakdownClick = () => {\n    navigate(\"/history\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleVelocityClick,\n        children: \"Get Velocity Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleBreakdownClick,\n        children: \"Get History Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: iterationName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(WorkBreakdownByIteration, {\n      storyType: x,\n      totalPoints: y1,\n      totalStories: y\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n}\n_s(BreakdownData, \"DmT5DVR3xmwHUBiBcQ90BtSa5us=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = BreakdownData;\nvar _c;\n$RefreshReg$(_c, \"BreakdownData\");","map":{"version":3,"names":["useEffect","useState","getBreakdownData","WorkBreakdownByIteration","useNavigate","useParams","jsxDEV","_jsxDEV","BreakdownData","_s","navigate","id","g","storyType","totalStories","totalPoints","iterationName","data2","setData2","x","setX","y","setY","y1","setY1","setIterationName","arr1","arr3","arr2","handleHistory","then","json","map","d","push","handleVelocityClick","handleBreakdownClick","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ethanreynolds/Documents/Pet Projects/Rally-Metrics/my-app/src/component/Breakdown/Breakdown.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { breakdownInterface } from \"../../interfaces/interface\";\nimport { getBreakdownData } from \"../../api/api\";\nimport { HistoricalWorkBreakdown } from \"../HistoricalWorkBreakdown\";\nimport { WorkBreakdownByIteration } from \"../WorkBreakdown\";\nimport { useNavigate, useParams } from \"react-router-dom\";\n\n\nexport function BreakdownData() {\n\n    const navigate = useNavigate();\n    const id = useParams().id;\n    const g: breakdownInterface = {\n        storyType: 'string',\n        totalStories: 0,\n        totalPoints: 0,\n        iterationName:'',\n      }\n\n    const [data2, setData2] = useState<breakdownInterface[]>([g]);\n    const [x, setX] = useState<string[]>([])\n    const [y, setY] = useState<number[]>([])\n    const [y1, setY1] = useState<number[]>([])\n    const [iterationName, setIterationName] = useState<string>('Getting iteration data...')\n\n  \n    let arr1: number[] = [];\n    let arr3: number[] = [];\n    let arr2: string[] = [];\n  \n    function handleHistory() {\n        getBreakdownData(id).then(json => setData2(json));\n      }\n\n    useEffect(() => {\n        handleHistory()\n    }, [])  \n  \n    useEffect(() => {\n      data2.map(d => {\n        arr1.push(d.totalStories);\n        arr3.push(d.totalPoints);\n        arr2.push(d.storyType)\n      })\n      setY(arr1);\n      setX(arr2);\n      setY1(arr3);\n      setIterationName(data2[0].iterationName)\n    }, [data2])\n\n    const handleVelocityClick = () => {\n        navigate(\"/velocity\");\n      }\n    \n     const handleBreakdownClick = () => {\n        navigate(\"/history\");\n    }\n\n    return (\n        <div className=\"App\">\n            <div>\n                <button onClick={ handleVelocityClick }>Get Velocity Data</button>\n                <button onClick={ handleBreakdownClick }>Get History Data</button>\n            </div>    \n            <div>\n              {iterationName}\n            </div>\n        <WorkBreakdownByIteration\n          storyType={x}\n          totalPoints={y1}\n          totalStories={y} />\n      </div>\n    )\n\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}