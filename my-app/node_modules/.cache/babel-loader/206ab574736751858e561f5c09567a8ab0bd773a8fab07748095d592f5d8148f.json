{"ast":null,"code":"var _jsxFileName = \"/Users/ethanreynolds/Documents/Pet Projects/Rally Metrics Front End/my-app/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState } from 'react';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\nimport './App.css';\nimport { Bar } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\nfunction App() {\n  _s();\n  const [graph, setGraph] = useState([]);\n  const [data, setData] = useState({\n    labels: [1, 2, 3],\n    datasets: [{\n      label: 'Expenses by Month',\n      data: [1, 2, 3],\n      backgroundColor: ['rgb(153, 102, 255)'],\n      borderColor: ['rgb(153, 102, 255)'],\n      borderWidth: 1\n    }]\n  });\n\n  // fetch('http://127.0.0.1:8000/velocity/users')\n  //   .then(response => response.json())\n  //   .then(d => {\n  //     setGraph(d);\n\n  //     setData({\n  //       labels: graph.map(point => point.id),\n  //       datasets: [{\n  //         label: 'Expenses by Month',\n  //         data: graph.map(point => point.velocity),\n  //         backgroundColor: [\n  //           'rgb(153, 102, 255)'\n  //         ],\n  //         borderColor: [\n  //           'rgb(153, 102, 255)'\n  //         ],\n  //         borderWidth: 1\n  //       }]\n  //     });\n\n  //   });\n\n  const labels = graph.map(point => point.id);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(Bar, {\n        data: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"WnDGX7YnAR7ETxkOvVHJMysKLhk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","Bar","jsxDEV","_jsxDEV","register","App","_s","graph","setGraph","data","setData","labels","datasets","label","backgroundColor","borderColor","borderWidth","map","point","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ethanreynolds/Documents/Pet Projects/Rally Metrics Front End/my-app/src/App.tsx"],"sourcesContent":["import React from 'react';\nimport { useEffect, useState } from 'react';\nimport logo from './logo.svg';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend,\n} from 'chart.js';\nimport './App.css';\nimport { Bar } from 'react-chartjs-2';\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\ninterface graphInterface {\n  id: number,\n  velocity: number\n}\n\ninterface graphVisuals {\n  labels: [],\n  datasets: []\n}\n\nfunction App() {\n\n\n  const [graph, setGraph] = useState<graphInterface[]>([])\n  const [data, setData] = useState({\n    labels: [1, 2, 3],\n    datasets: [{\n      label: 'Expenses by Month',\n      data: [1, 2, 3],\n      backgroundColor: [\n        'rgb(153, 102, 255)'\n      ],\n      borderColor: [\n        'rgb(153, 102, 255)'\n      ],\n      borderWidth: 1\n    }]\n  });\n\n  // fetch('http://127.0.0.1:8000/velocity/users')\n  //   .then(response => response.json())\n  //   .then(d => {\n  //     setGraph(d);\n\n  //     setData({\n  //       labels: graph.map(point => point.id),\n  //       datasets: [{\n  //         label: 'Expenses by Month',\n  //         data: graph.map(point => point.velocity),\n  //         backgroundColor: [\n  //           'rgb(153, 102, 255)'\n  //         ],\n  //         borderColor: [\n  //           'rgb(153, 102, 255)'\n  //         ],\n  //         borderWidth: 1\n  //       }]\n  //     });\n\n  //   });\n\n  const labels = graph.map(point => point.id)\n\n\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Bar data={data} />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAoBC,QAAQ,QAAQ,OAAO;AAE3C,SACEC,KAAK,IAAIC,OAAO,EAChBC,aAAa,EACbC,WAAW,EACXC,UAAU,EACVC,KAAK,EACLC,OAAO,EACPC,MAAM,QACD,UAAU;AACjB,OAAO,WAAW;AAClB,SAASC,GAAG,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtCT,OAAO,CAACU,QAAQ,CACdT,aAAa,EACbC,WAAW,EACXC,UAAU,EACVC,KAAK,EACLC,OAAO,EACPC,MAAM,CACP;AAYD,SAASK,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAGb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAmB,EAAE,CAAC;EACxD,MAAM,CAACiB,IAAI,EAAEC,OAAO,CAAC,GAAGlB,QAAQ,CAAC;IAC/BmB,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACjBC,QAAQ,EAAE,CAAC;MACTC,KAAK,EAAE,mBAAmB;MAC1BJ,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;MACfK,eAAe,EAAE,CACf,oBAAoB,CACrB;MACDC,WAAW,EAAE,CACX,oBAAoB,CACrB;MACDC,WAAW,EAAE;IACf,CAAC;EACH,CAAC,CAAC;;EAEF;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;;EAEA,MAAML,MAAM,GAAGJ,KAAK,CAACU,GAAG,CAACC,KAAK,IAAIA,KAAK,CAACC,EAAE,CAAC;EAI3C,oBACEhB,OAAA;IAAKiB,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBlB,OAAA;MAAQiB,SAAS,EAAC,YAAY;MAAAC,QAAA,eAC5BlB,OAAA,CAACF,GAAG;QAACQ,IAAI,EAAEA;MAAK;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAG;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACZ;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACL;AAEV;AAACnB,EAAA,CApDQD,GAAG;AAAAqB,EAAA,GAAHrB,GAAG;AAsDZ,eAAeA,GAAG;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}