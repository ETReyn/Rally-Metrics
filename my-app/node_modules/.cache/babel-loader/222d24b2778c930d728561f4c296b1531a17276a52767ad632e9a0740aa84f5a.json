{"ast":null,"code":"var _jsxFileName = \"/Users/ethanreynolds/Documents/Pet Projects/Rally Metrics Front End/my-app/src/App.tsx\",\n  _s = $RefreshSig$();\n// import React, { useRef } from 'react';\n// import { useEffect, useState } from 'react';\n// import {\n//   Chart as ChartJS,\n//   CategoryScale,\n//   LinearScale,\n//   BarElement,\n//   Title,\n//   Tooltip,\n// } from 'chart.js/auto';\n// import './App.css';\n// import { UserVelocity } from './component/Bar';\n// import { WorkBreakdownByIteration } from './component/WorkBreakdown';\n// import { HistoricalWorkBreakdown } from './component/HistoricalWorkBreakdown';\n// import { velocity } from './interfaces/interface';\n\n// ChartJS.register(\n//   CategoryScale,\n//   LinearScale,\n//   BarElement,\n//   Title,\n//   Tooltip\n// );\n\n// interface breakdownInterface {\n//   storyType: string,\n//   totalStories: number,\n//   totalPoints: number\n// }\n\n// interface graphInterface {\n//   iteration: string,\n//   totalStories: number\n// }\n\n// interface dataInterface {\n//   storyType: string,\n//   totalStories: number,\n//   totalPoints: number,\n//   iteration: string\n// }\n\n// function App() {\n\n//   const c: dataInterface = {\n//     iteration: '',\n//     storyType: '',\n//     totalStories: 0,\n//     totalPoints: 0,\n//   }\n//   const g: breakdownInterface = {\n//     storyType: 'string',\n//     totalStories: 0,\n//     totalPoints: 0\n//   }\n\n//   const v: velocity = {\n//     id: 0,\n//     velocity: 0,\n//     capacity: 0\n//   }\n//   // USER VELOCITY\n//   const [data, setData] = useState<velocity[]>([v])\n//   const [vel, setVel] = useState<boolean>(true)\n//   const [historic, setHistoric] = useState<boolean>(true)\n//   const [breakdown, setBreakdown] = useState<boolean>(true)\n\n//   // const [x, setX] = useState<number[]>(data.map(d => d.id))\n//   // const [y, setY] = useState<number[]>(data.map(d => d.velocity))\n//   // const [y1, setY1] = useState<number[]>(data.map(d => d.capacity))\n\n//   function handleVelocity() {\n//     fetch('http://127.0.0.1:8000/velocity/users', {\n//       method: 'GET',\n//       headers: {\n//         accept: 'application/json',\n//       },\n//     }).then(resp => resp.json()).then(json => setData(json.filter((d: { velocity: number, capacity: number, id: number }) => {\n//       return d.capacity > 0\n//     })));\n//     setHistoric(true);\n//     setBreakdown(true);\n//     setVel(false);\n//   }\n\n//   // useEffect(() => {\n//   //   setX(data.map(d => d.id))\n//   //   setY(data.map(d => d.velocity))\n//   //   setY1(data.map(d => d.capacity))\n//   // }, [data])\n\n//   // WORK BREAKDOWN BY ITERATION\n//   const [data2, setData2] = useState<breakdownInterface[]>([g]);\n//   const [x, setX] = useState<string[]>([])\n//   const [y, setY] = useState<number[]>([])\n//   const [y1, setY1] = useState<number[]>([])\n\n//   let arr1: number[] = [];\n//   let arr3: number[] = [];\n//   let arr2: string[] = [];\n\n//   function handleBreakdown() {\n//     fetch('http://127.0.0.1:8000/breakdown/499935212704', {\n//       method: 'GET',\n//       headers: {\n//         accept: 'application/json',\n//       },\n//     }).then(resp => resp.json()).then(json => setData2(json));\n//     setVel(true)\n//     setHistoric(true)\n//     setBreakdown(false)\n//   }\n//   useEffect(() => {\n\n//     data2.map(d => {\n//       arr1.push(d.totalStories);\n//       arr3.push(d.totalPoints);\n//       arr2.push(d.storyType)\n//     })\n//     setY(arr1);\n//     setX(arr2);\n//     setY1(arr3);\n//   }, [data2])\n\n//   // WORK BREAKDOWN BY ITERATION\n//   const [data1, setData1] = useState<dataInterface[]>([c]);\n//   const [enhancement, setEnhancement] = useState<number[]>([])\n//   const [security, setSecurity] = useState<number[]>([])\n//   const [stabilization, setStabilization] = useState<number[]>([])\n//   const [feature, setFeature] = useState<number[]>([])\n//   const [defect, setDefect] = useState<number[]>([])\n//   const [iteration, setIteration] = useState<string[]>([])\n\n//   function uniq(a: string[]) {\n//     return Array.from(new Set(a));\n//   }\n\n//   function handleHistoricClick() {\n//     fetch('http://127.0.0.1:8000/breakdown', {\n//       method: 'GET',\n//       headers: {\n//         accept: 'application/json',\n//       },\n//     }).then(resp => resp.json()).then(json => setData1(json));\n//     setVel(true);\n//     setBreakdown(true)\n//     setHistoric(false);\n//   }\n//   useEffect(() => {\n//     let enh: number[] = [];\n//     let sec: number[] = [];\n//     let sta: number[] = [];\n//     let fea: number[] = [];\n//     let def: number[] = [];\n//     let iter: string[] = [];\n//     const map1 = new Map();\n//     data1.filter(d => {\n//       return !(d.iteration.includes(\"PLAN\"))\n//     })\n//       // .filter(d => {\n//       //   return d.iteration.includes(\"2022\") || d.iteration.includes(\"2023\")\n//       // })\n//       .map(d => {\n//         if (d.storyType === \"DEFECT\") {\n//           def.push(d.totalStories)\n//         }\n//         if (d.storyType === \"STABILIZATION\") {\n//           sta.push(d.totalStories)\n//         }\n//         if (d.storyType === \"ENHANCEMENT\") {\n//           enh.push(d.totalStories)\n//         }\n//         if (d.storyType === \"FEATURE\") {\n//           fea.push(d.totalStories)\n//         }\n//         if (d.storyType === \"SECURITY\") {\n//           sec.push(d.totalStories)\n//         }\n//         iter.push(d.iteration)\n//         if (!map1.has(d.iteration)) {\n//           map1.set(d.iteration, 0)\n//         }\n//         const newValue = d.totalStories + map1.get(d.iteration)\n//         map1.set(d.iteration, newValue);\n//       })\n//     setEnhancement(enh);\n//     setStabilization(sta);\n//     setSecurity(sec);\n//     setDefect(def);\n//     setFeature(fea);\n//     setIteration(uniq(iter));\n\n//   }, [data1])\n\n//   return (\n//     <div className=\"App\">\n//       Iteration Data\n//       <div>\n//         <button onClick={() => handleVelocity()}>Get Velocity Data</button>\n//         <button onClick={() => handleHistoricClick()}>Get Historic Data</button>\n//         <button onClick={() => handleBreakdown()}>Get Breakdown Data</button>\n//       </div>\n//       <div hidden={historic}>\n//         <HistoricalWorkBreakdown\n//           enhancements={enhancement}\n//           security={security}\n//           stabilization={stabilization}\n//           defect={defect}\n//           feature={feature}\n//           iteration={iteration}\n//         />\n//       </div>\n//       <div hidden={vel}>\n//         <UserVelocity\n//           id={data.map(d => d.id)}\n//           velocity={data.map(d => d.velocity)}\n//           capacity={data.map(d => d.capacity)}\n//         />\n//       </div>\n//       <div hidden={breakdown}>\n//         <WorkBreakdownByIteration\n//           storyType={x}\n//           totalPoints={y1}\n//           totalStories={y} />\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default App;\n\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport { useReactTable, getPaginationRowModel, getFilteredRowModel, getCoreRowModel, getGroupedRowModel, getExpandedRowModel, flexRender } from '@tanstack/react-table';\nimport { makeData } from './makeData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const rerender = React.useReducer(() => ({}), {})[1];\n  const columns = React.useMemo(() => [{\n    header: 'Name',\n    columns: [{\n      accessorKey: 'firstName',\n      header: 'First Name',\n      cell: info => info.getValue(),\n      /**\n       * override the value used for row grouping\n       * (otherwise, defaults to the value derived from accessorKey / accessorFn)\n       */\n      getGroupingValue: row => `${row.firstName} ${row.lastName}`\n    }, {\n      accessorFn: row => row.lastName,\n      id: 'lastName',\n      header: () => /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Last Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 27\n      }, this),\n      cell: info => info.getValue()\n    }]\n  }, {\n    header: 'Info',\n    columns: [{\n      accessorKey: 'age',\n      header: () => 'Age',\n      aggregatedCell: _ref => {\n        let {\n          getValue\n        } = _ref;\n        return Math.round(getValue() * 100) / 100;\n      },\n      aggregationFn: 'median'\n    }, {\n      header: 'More Info',\n      columns: [{\n        accessorKey: 'visits',\n        header: () => /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Visits\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 31\n        }, this),\n        aggregationFn: 'sum'\n        // aggregatedCell: ({ getValue }) => getValue().toLocaleString(),\n      }, {\n        accessorKey: 'status',\n        header: 'Status'\n      }, {\n        accessorKey: 'progress',\n        header: 'Profile Progress',\n        cell: _ref2 => {\n          let {\n            getValue\n          } = _ref2;\n          return Math.round(getValue() * 100) / 100 + '%';\n        },\n        aggregationFn: 'mean',\n        aggregatedCell: _ref3 => {\n          let {\n            getValue\n          } = _ref3;\n          return Math.round(getValue() * 100) / 100 + '%';\n        }\n      }]\n    }]\n  }], []);\n  const [data, setData] = React.useState(() => makeData(100000));\n  const refreshData = () => setData(() => makeData(100000));\n  const [grouping, setGrouping] = React.useState([]);\n  const table = useReactTable({\n    data,\n    columns,\n    state: {\n      grouping\n    },\n    onGroupingChange: setGrouping,\n    getExpandedRowModel: getExpandedRowModel(),\n    getGroupedRowModel: getGroupedRowModel(),\n    getCoreRowModel: getCoreRowModel(),\n    getPaginationRowModel: getPaginationRowModel(),\n    getFilteredRowModel: getFilteredRowModel(),\n    debugTable: true\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-2\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"h-2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: table.getHeaderGroups().map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: headerGroup.headers.map(header => {\n            return /*#__PURE__*/_jsxDEV(\"th\", {\n              colSpan: header.colSpan,\n              children: header.isPlaceholder ? null : /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [header.column.getCanGroup() ?\n                /*#__PURE__*/\n                // If the header can be grouped, let's add a toggle\n                _jsxDEV(\"button\", {\n                  onClick: header.column.getToggleGroupingHandler(),\n                  style: {\n                    cursor: 'pointer'\n                  },\n                  children: header.column.getIsGrouped() ? `🛑(${header.column.getGroupedIndex()}) ` : `👊 `\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 354,\n                  columnNumber: 27\n                }, this) : null, ' ', flexRender(header.column.columnDef.header, header.getContext())]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 351,\n                columnNumber: 23\n              }, this)\n            }, header.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 349,\n              columnNumber: 19\n            }, this);\n          })\n        }, headerGroup.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: table.getRowModel().rows.map(row => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: row.getVisibleCells().map(cell => {\n              var _cell$column$columnDe;\n              return /*#__PURE__*/_jsxDEV(\"td\", {\n                key: cell.id,\n                style: {\n                  background: cell.getIsGrouped() ? '#0aff0082' : cell.getIsAggregated() ? '#ffa50078' : cell.getIsPlaceholder() ? '#ff000042' : 'white'\n                },\n                children: cell.getIsGrouped() ?\n                /*#__PURE__*/\n                // If it's a grouped cell, add an expander and row count\n                _jsxDEV(_Fragment, {\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: row.getToggleExpandedHandler(),\n                    style: {\n                      cursor: row.getCanExpand() ? 'pointer' : 'normal'\n                    },\n                    children: [row.getIsExpanded() ? '👇' : '👉', ' ', flexRender(cell.column.columnDef.cell, cell.getContext()), ' ', \"(\", row.subRows.length, \")\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 402,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false) : cell.getIsAggregated() ?\n                // If the cell is aggregated, use the Aggregated\n                // renderer for cell\n                flexRender((_cell$column$columnDe = cell.column.columnDef.aggregatedCell) !== null && _cell$column$columnDe !== void 0 ? _cell$column$columnDe : cell.column.columnDef.cell, cell.getContext()) : cell.getIsPlaceholder() ? null :\n                // For cells with repeated values, render null\n                // Otherwise, just render the regular cell\n                flexRender(cell.column.columnDef.cell, cell.getContext())\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 385,\n                columnNumber: 21\n              }, this);\n            })\n          }, row.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 382,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"h-2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center gap-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"border rounded p-1\",\n        onClick: () => table.setPageIndex(0),\n        disabled: !table.getCanPreviousPage(),\n        children: '<<'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"border rounded p-1\",\n        onClick: () => table.previousPage(),\n        disabled: !table.getCanPreviousPage(),\n        children: '<'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 452,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"border rounded p-1\",\n        onClick: () => table.nextPage(),\n        disabled: !table.getCanNextPage(),\n        children: '>'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 459,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"border rounded p-1\",\n        onClick: () => table.setPageIndex(table.getPageCount() - 1),\n        disabled: !table.getCanNextPage(),\n        children: '>>'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 466,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"flex items-center gap-1\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Page\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [table.getState().pagination.pageIndex + 1, \" of\", ' ', table.getPageCount()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 475,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"flex items-center gap-1\",\n        children: [\"| Go to page:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          defaultValue: table.getState().pagination.pageIndex + 1,\n          onChange: e => {\n            const page = e.target.value ? Number(e.target.value) - 1 : 0;\n            table.setPageIndex(page);\n          },\n          className: \"border p-1 rounded w-16\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 482,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: table.getState().pagination.pageSize,\n        onChange: e => {\n          table.setPageSize(Number(e.target.value));\n        },\n        children: [10, 20, 30, 40, 50].map(pageSize => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: pageSize,\n          children: [\"Show \", pageSize]\n        }, pageSize, true, {\n          fileName: _jsxFileName,\n          lineNumber: 499,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 492,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [table.getRowModel().rows.length, \" Rows\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 505,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => rerender(),\n        children: \"Force Rerender\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 507,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 506,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => refreshData(),\n        children: \"Refresh Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 510,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 509,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: JSON.stringify(grouping, null, 2)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 512,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 341,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"8B9G97a9qNtm9QE8sdPBwSQ5wuY=\", false, function () {\n  return [useReactTable];\n});\n_c = App;\nconst rootElement = document.getElementById('root');\nif (!rootElement) throw new Error('Failed to find the root element');\nReactDOM.createRoot(rootElement).render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 522,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 521,\n  columnNumber: 3\n}, this));\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","ReactDOM","useReactTable","getPaginationRowModel","getFilteredRowModel","getCoreRowModel","getGroupedRowModel","getExpandedRowModel","flexRender","makeData","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","rerender","useReducer","columns","useMemo","header","accessorKey","cell","info","getValue","getGroupingValue","row","firstName","lastName","accessorFn","id","children","fileName","_jsxFileName","lineNumber","columnNumber","aggregatedCell","_ref","Math","round","aggregationFn","_ref2","_ref3","data","setData","useState","refreshData","grouping","setGrouping","table","state","onGroupingChange","debugTable","className","getHeaderGroups","map","headerGroup","headers","colSpan","isPlaceholder","column","getCanGroup","onClick","getToggleGroupingHandler","style","cursor","getIsGrouped","getGroupedIndex","columnDef","getContext","getRowModel","rows","getVisibleCells","_cell$column$columnDe","key","background","getIsAggregated","getIsPlaceholder","getToggleExpandedHandler","getCanExpand","getIsExpanded","subRows","length","setPageIndex","disabled","getCanPreviousPage","previousPage","nextPage","getCanNextPage","getPageCount","getState","pagination","pageIndex","type","defaultValue","onChange","e","page","target","value","Number","pageSize","setPageSize","JSON","stringify","_c","rootElement","document","getElementById","Error","createRoot","render","StrictMode","$RefreshReg$"],"sources":["/Users/ethanreynolds/Documents/Pet Projects/Rally Metrics Front End/my-app/src/App.tsx"],"sourcesContent":["// import React, { useRef } from 'react';\n// import { useEffect, useState } from 'react';\n// import {\n//   Chart as ChartJS,\n//   CategoryScale,\n//   LinearScale,\n//   BarElement,\n//   Title,\n//   Tooltip,\n// } from 'chart.js/auto';\n// import './App.css';\n// import { UserVelocity } from './component/Bar';\n// import { WorkBreakdownByIteration } from './component/WorkBreakdown';\n// import { HistoricalWorkBreakdown } from './component/HistoricalWorkBreakdown';\n// import { velocity } from './interfaces/interface';\n\n// ChartJS.register(\n//   CategoryScale,\n//   LinearScale,\n//   BarElement,\n//   Title,\n//   Tooltip\n// );\n\n// interface breakdownInterface {\n//   storyType: string,\n//   totalStories: number,\n//   totalPoints: number\n// }\n\n// interface graphInterface {\n//   iteration: string,\n//   totalStories: number\n// }\n\n\n\n// interface dataInterface {\n//   storyType: string,\n//   totalStories: number,\n//   totalPoints: number,\n//   iteration: string\n// }\n\n// function App() {\n\n//   const c: dataInterface = {\n//     iteration: '',\n//     storyType: '',\n//     totalStories: 0,\n//     totalPoints: 0,\n//   }\n//   const g: breakdownInterface = {\n//     storyType: 'string',\n//     totalStories: 0,\n//     totalPoints: 0\n//   }\n\n//   const v: velocity = {\n//     id: 0,\n//     velocity: 0,\n//     capacity: 0\n//   }\n//   // USER VELOCITY\n//   const [data, setData] = useState<velocity[]>([v])\n//   const [vel, setVel] = useState<boolean>(true)\n//   const [historic, setHistoric] = useState<boolean>(true)\n//   const [breakdown, setBreakdown] = useState<boolean>(true)\n\n//   // const [x, setX] = useState<number[]>(data.map(d => d.id))\n//   // const [y, setY] = useState<number[]>(data.map(d => d.velocity))\n//   // const [y1, setY1] = useState<number[]>(data.map(d => d.capacity))\n\n\n//   function handleVelocity() {\n//     fetch('http://127.0.0.1:8000/velocity/users', {\n//       method: 'GET',\n//       headers: {\n//         accept: 'application/json',\n//       },\n//     }).then(resp => resp.json()).then(json => setData(json.filter((d: { velocity: number, capacity: number, id: number }) => {\n//       return d.capacity > 0\n//     })));\n//     setHistoric(true);\n//     setBreakdown(true);\n//     setVel(false);\n//   }\n\n//   // useEffect(() => {\n//   //   setX(data.map(d => d.id))\n//   //   setY(data.map(d => d.velocity))\n//   //   setY1(data.map(d => d.capacity))\n//   // }, [data])\n\n//   // WORK BREAKDOWN BY ITERATION\n//   const [data2, setData2] = useState<breakdownInterface[]>([g]);\n//   const [x, setX] = useState<string[]>([])\n//   const [y, setY] = useState<number[]>([])\n//   const [y1, setY1] = useState<number[]>([])\n\n//   let arr1: number[] = [];\n//   let arr3: number[] = [];\n//   let arr2: string[] = [];\n\n//   function handleBreakdown() {\n//     fetch('http://127.0.0.1:8000/breakdown/499935212704', {\n//       method: 'GET',\n//       headers: {\n//         accept: 'application/json',\n//       },\n//     }).then(resp => resp.json()).then(json => setData2(json));\n//     setVel(true)\n//     setHistoric(true)\n//     setBreakdown(false)\n//   }\n//   useEffect(() => {\n\n//     data2.map(d => {\n//       arr1.push(d.totalStories);\n//       arr3.push(d.totalPoints);\n//       arr2.push(d.storyType)\n//     })\n//     setY(arr1);\n//     setX(arr2);\n//     setY1(arr3);\n//   }, [data2])\n\n//   // WORK BREAKDOWN BY ITERATION\n//   const [data1, setData1] = useState<dataInterface[]>([c]);\n//   const [enhancement, setEnhancement] = useState<number[]>([])\n//   const [security, setSecurity] = useState<number[]>([])\n//   const [stabilization, setStabilization] = useState<number[]>([])\n//   const [feature, setFeature] = useState<number[]>([])\n//   const [defect, setDefect] = useState<number[]>([])\n//   const [iteration, setIteration] = useState<string[]>([])\n\n//   function uniq(a: string[]) {\n//     return Array.from(new Set(a));\n//   }\n\n//   function handleHistoricClick() {\n//     fetch('http://127.0.0.1:8000/breakdown', {\n//       method: 'GET',\n//       headers: {\n//         accept: 'application/json',\n//       },\n//     }).then(resp => resp.json()).then(json => setData1(json));\n//     setVel(true);\n//     setBreakdown(true)\n//     setHistoric(false);\n//   }\n//   useEffect(() => {\n//     let enh: number[] = [];\n//     let sec: number[] = [];\n//     let sta: number[] = [];\n//     let fea: number[] = [];\n//     let def: number[] = [];\n//     let iter: string[] = [];\n//     const map1 = new Map();\n//     data1.filter(d => {\n//       return !(d.iteration.includes(\"PLAN\"))\n//     })\n//       // .filter(d => {\n//       //   return d.iteration.includes(\"2022\") || d.iteration.includes(\"2023\")\n//       // })\n//       .map(d => {\n//         if (d.storyType === \"DEFECT\") {\n//           def.push(d.totalStories)\n//         }\n//         if (d.storyType === \"STABILIZATION\") {\n//           sta.push(d.totalStories)\n//         }\n//         if (d.storyType === \"ENHANCEMENT\") {\n//           enh.push(d.totalStories)\n//         }\n//         if (d.storyType === \"FEATURE\") {\n//           fea.push(d.totalStories)\n//         }\n//         if (d.storyType === \"SECURITY\") {\n//           sec.push(d.totalStories)\n//         }\n//         iter.push(d.iteration)\n//         if (!map1.has(d.iteration)) {\n//           map1.set(d.iteration, 0)\n//         }\n//         const newValue = d.totalStories + map1.get(d.iteration)\n//         map1.set(d.iteration, newValue);\n//       })\n//     setEnhancement(enh);\n//     setStabilization(sta);\n//     setSecurity(sec);\n//     setDefect(def);\n//     setFeature(fea);\n//     setIteration(uniq(iter));\n\n//   }, [data1])\n\n//   return (\n//     <div className=\"App\">\n//       Iteration Data\n//       <div>\n//         <button onClick={() => handleVelocity()}>Get Velocity Data</button>\n//         <button onClick={() => handleHistoricClick()}>Get Historic Data</button>\n//         <button onClick={() => handleBreakdown()}>Get Breakdown Data</button>\n//       </div>\n//       <div hidden={historic}>\n//         <HistoricalWorkBreakdown\n//           enhancements={enhancement}\n//           security={security}\n//           stabilization={stabilization}\n//           defect={defect}\n//           feature={feature}\n//           iteration={iteration}\n//         />\n//       </div>\n//       <div hidden={vel}>\n//         <UserVelocity\n//           id={data.map(d => d.id)}\n//           velocity={data.map(d => d.velocity)}\n//           capacity={data.map(d => d.capacity)}\n//         />\n//       </div>\n//       <div hidden={breakdown}>\n//         <WorkBreakdownByIteration\n//           storyType={x}\n//           totalPoints={y1}\n//           totalStories={y} />\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default App;\n\n\nimport React from 'react'\nimport ReactDOM from 'react-dom/client'\n\nimport './index.css'\n\nimport {\n  GroupingState,\n  useReactTable,\n  getPaginationRowModel,\n  getFilteredRowModel,\n  getCoreRowModel,\n  getGroupedRowModel,\n  getExpandedRowModel,\n  ColumnDef,\n  flexRender,\n} from '@tanstack/react-table'\nimport { makeData, Person } from './makeData'\n\nfunction App() {\n  const rerender = React.useReducer(() => ({}), {})[1]\n\n  const columns = React.useMemo<ColumnDef<Person>[]>(\n    () => [\n      {\n        header: 'Name',\n        columns: [\n          {\n            accessorKey: 'firstName',\n            header: 'First Name',\n            cell: info => info.getValue(),\n            /**\n             * override the value used for row grouping\n             * (otherwise, defaults to the value derived from accessorKey / accessorFn)\n             */\n            getGroupingValue: row => `${row.firstName} ${row.lastName}`,\n          },\n          {\n            accessorFn: row => row.lastName,\n            id: 'lastName',\n            header: () => <span>Last Name</span>,\n            cell: info => info.getValue(),\n          },\n        ],\n      },\n      {\n        header: 'Info',\n        columns: [\n          {\n            accessorKey: 'age',\n            header: () => 'Age',\n            aggregatedCell: ({ getValue }) =>\n              Math.round(getValue<number>() * 100) / 100,\n            aggregationFn: 'median',\n          },\n          {\n            header: 'More Info',\n            columns: [\n              {\n                accessorKey: 'visits',\n                header: () => <span>Visits</span>,\n                aggregationFn: 'sum',\n                // aggregatedCell: ({ getValue }) => getValue().toLocaleString(),\n              },\n              {\n                accessorKey: 'status',\n                header: 'Status',\n              },\n              {\n                accessorKey: 'progress',\n                header: 'Profile Progress',\n                cell: ({ getValue }) =>\n                  Math.round(getValue<number>() * 100) / 100 + '%',\n                aggregationFn: 'mean',\n                aggregatedCell: ({ getValue }) =>\n                  Math.round(getValue<number>() * 100) / 100 + '%',\n              },\n            ],\n          },\n        ],\n      },\n    ],\n    []\n  )\n\n  const [data, setData] = React.useState(() => makeData(100000))\n  const refreshData = () => setData(() => makeData(100000))\n\n  const [grouping, setGrouping] = React.useState<GroupingState>([])\n\n  const table = useReactTable({\n    data,\n    columns,\n    state: {\n      grouping,\n    },\n    onGroupingChange: setGrouping,\n    getExpandedRowModel: getExpandedRowModel(),\n    getGroupedRowModel: getGroupedRowModel(),\n    getCoreRowModel: getCoreRowModel(),\n    getPaginationRowModel: getPaginationRowModel(),\n    getFilteredRowModel: getFilteredRowModel(),\n    debugTable: true,\n  })\n\n  return (\n    <div className=\"p-2\">\n      <div className=\"h-2\" />\n      <table>\n        <thead>\n          {table.getHeaderGroups().map(headerGroup => (\n            <tr key={headerGroup.id}>\n              {headerGroup.headers.map(header => {\n                return (\n                  <th key={header.id} colSpan={header.colSpan}>\n                    {header.isPlaceholder ? null : (\n                      <div>\n                        {header.column.getCanGroup() ? (\n                          // If the header can be grouped, let's add a toggle\n                          <button\n                            {...{\n                              onClick: header.column.getToggleGroupingHandler(),\n                              style: {\n                                cursor: 'pointer',\n                              },\n                            }}\n                          >\n                            {header.column.getIsGrouped()\n                              ? `🛑(${header.column.getGroupedIndex()}) `\n                              : `👊 `}\n                          </button>\n                        ) : null}{' '}\n                        {flexRender(\n                          header.column.columnDef.header,\n                          header.getContext()\n                        )}\n                      </div>\n                    )}\n                  </th>\n                )\n              })}\n            </tr>\n          ))}\n        </thead>\n        <tbody>\n          {table.getRowModel().rows.map(row => {\n            return (\n              <tr key={row.id}>\n                {row.getVisibleCells().map(cell => {\n                  return (\n                    <td\n                      {...{\n                        key: cell.id,\n                        style: {\n                          background: cell.getIsGrouped()\n                            ? '#0aff0082'\n                            : cell.getIsAggregated()\n                            ? '#ffa50078'\n                            : cell.getIsPlaceholder()\n                            ? '#ff000042'\n                            : 'white',\n                        },\n                      }}\n                    >\n                      {cell.getIsGrouped() ? (\n                        // If it's a grouped cell, add an expander and row count\n                        <>\n                          <button\n                            {...{\n                              onClick: row.getToggleExpandedHandler(),\n                              style: {\n                                cursor: row.getCanExpand()\n                                  ? 'pointer'\n                                  : 'normal',\n                              },\n                            }}\n                          >\n                            {row.getIsExpanded() ? '👇' : '👉'}{' '}\n                            {flexRender(\n                              cell.column.columnDef.cell,\n                              cell.getContext()\n                            )}{' '}\n                            ({row.subRows.length})\n                          </button>\n                        </>\n                      ) : cell.getIsAggregated() ? (\n                        // If the cell is aggregated, use the Aggregated\n                        // renderer for cell\n                        flexRender(\n                          cell.column.columnDef.aggregatedCell ??\n                            cell.column.columnDef.cell,\n                          cell.getContext()\n                        )\n                      ) : cell.getIsPlaceholder() ? null : ( // For cells with repeated values, render null\n                        // Otherwise, just render the regular cell\n                        flexRender(\n                          cell.column.columnDef.cell,\n                          cell.getContext()\n                        )\n                      )}\n                    </td>\n                  )\n                })}\n              </tr>\n            )\n          })}\n        </tbody>\n      </table>\n      <div className=\"h-2\" />\n      <div className=\"flex items-center gap-2\">\n        <button\n          className=\"border rounded p-1\"\n          onClick={() => table.setPageIndex(0)}\n          disabled={!table.getCanPreviousPage()}\n        >\n          {'<<'}\n        </button>\n        <button\n          className=\"border rounded p-1\"\n          onClick={() => table.previousPage()}\n          disabled={!table.getCanPreviousPage()}\n        >\n          {'<'}\n        </button>\n        <button\n          className=\"border rounded p-1\"\n          onClick={() => table.nextPage()}\n          disabled={!table.getCanNextPage()}\n        >\n          {'>'}\n        </button>\n        <button\n          className=\"border rounded p-1\"\n          onClick={() => table.setPageIndex(table.getPageCount() - 1)}\n          disabled={!table.getCanNextPage()}\n        >\n          {'>>'}\n        </button>\n        <span className=\"flex items-center gap-1\">\n          <div>Page</div>\n          <strong>\n            {table.getState().pagination.pageIndex + 1} of{' '}\n            {table.getPageCount()}\n          </strong>\n        </span>\n        <span className=\"flex items-center gap-1\">\n          | Go to page:\n          <input\n            type=\"number\"\n            defaultValue={table.getState().pagination.pageIndex + 1}\n            onChange={e => {\n              const page = e.target.value ? Number(e.target.value) - 1 : 0\n              table.setPageIndex(page)\n            }}\n            className=\"border p-1 rounded w-16\"\n          />\n        </span>\n        <select\n          value={table.getState().pagination.pageSize}\n          onChange={e => {\n            table.setPageSize(Number(e.target.value))\n          }}\n        >\n          {[10, 20, 30, 40, 50].map(pageSize => (\n            <option key={pageSize} value={pageSize}>\n              Show {pageSize}\n            </option>\n          ))}\n        </select>\n      </div>\n      <div>{table.getRowModel().rows.length} Rows</div>\n      <div>\n        <button onClick={() => rerender()}>Force Rerender</button>\n      </div>\n      <div>\n        <button onClick={() => refreshData()}>Refresh Data</button>\n      </div>\n      <pre>{JSON.stringify(grouping, null, 2)}</pre>\n    </div>\n  )\n}\n\nconst rootElement = document.getElementById('root')\nif (!rootElement) throw new Error('Failed to find the root element')\n\nReactDOM.createRoot(rootElement).render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n)"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AAEvC,OAAO,aAAa;AAEpB,SAEEC,aAAa,EACbC,qBAAqB,EACrBC,mBAAmB,EACnBC,eAAe,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"},"metadata":{},"sourceType":"module","externalDependencies":[]}