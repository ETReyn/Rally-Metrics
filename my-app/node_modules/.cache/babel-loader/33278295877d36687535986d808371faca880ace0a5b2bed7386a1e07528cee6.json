{"ast":null,"code":"var _jsxFileName = \"/Users/ethanreynolds/Documents/Pet Projects/Rally Metrics Front End/my-app/src/component/HistoricalWorkBreakdown.tsx\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\nimport { Bar } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\nexport function HistoricalWorkBreakdown(d) {\n  console.log(d.iteration);\n  const total = d.defect.map((x, index) => {\n    return x + d.enhancements[index] + d.feature[index] + d.security[index] + d.stabilization[index];\n  });\n  const data = {\n    labels: d.iteration,\n    options: {\n      tooltips: {\n        displayColors: true,\n        callbacks: {\n          mode: 'x'\n        }\n      },\n      scales: {\n        xAxes: [{\n          stacked: true,\n          gridLines: {\n            display: false\n          }\n        }],\n        yAxes: [{\n          stacked: true,\n          ticks: {\n            beginAtZero: true\n          },\n          type: 'linear'\n        }]\n      },\n      responsive: true,\n      maintainAspectRatio: false,\n      legend: {\n        position: 'bottom'\n      }\n    },\n    datasets: [{\n      label: 'ENHANCEMENT',\n      data: d.enhancements,\n      // you can set indiviual colors for each bar\n      backgroundColor: ['rgba(201, 203, 207, 0.2)'],\n      borderColor: ['rgb(201, 203, 207)'],\n      borderWidth: 2\n    }, {\n      label: 'SECURITY',\n      data: d.security,\n      backgroundColor: ['rgba(255, 205, 86, 0.2)'],\n      borderColor: ['rgb(255, 205, 86)'],\n      borderWidth: 2\n    }, {\n      label: 'STABILIZATION',\n      data: d.stabilization,\n      // you can set indiviual colors for each bar\n      backgroundColor: ['rgba(75, 192, 192, 0.2)'],\n      borderColor: ['rgb(75, 192, 192)'],\n      borderWidth: 2\n    }, {\n      label: 'DEFECT',\n      data: d.defect,\n      // you can set indiviual colors for each bar\n      backgroundColor: ['rgba(153, 102, 255, 0.2)'],\n      borderColor: ['rgb(54, 162, 235)'],\n      borderWidth: 2\n    }, {\n      label: 'FEATURE',\n      data: d.feature,\n      // you can set indiviual colors for each bar\n      backgroundColor: ['rgba(255, 159, 64, 0.2)'],\n      borderColor: ['rgb(255, 159, 64)'],\n      borderWidth: 2\n    }, {\n      label: 'TOTAL',\n      data: total,\n      // you can set indiviual colors for each bar\n      backgroundColor: ['rgba(255, 99, 132, 0.2)'],\n      borderColor: ['rgb(255, 99, 132)'],\n      borderWidth: 1\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(Bar, {\n    data: data\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 12\n  }, this);\n}\n_c = HistoricalWorkBreakdown;\n;\nvar _c;\n$RefreshReg$(_c, \"HistoricalWorkBreakdown\");","map":{"version":3,"names":["Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","Bar","jsxDEV","_jsxDEV","register","HistoricalWorkBreakdown","d","console","log","iteration","total","defect","map","x","index","enhancements","feature","security","stabilization","data","labels","options","tooltips","displayColors","callbacks","mode","scales","xAxes","stacked","gridLines","display","yAxes","ticks","beginAtZero","type","responsive","maintainAspectRatio","legend","position","datasets","label","backgroundColor","borderColor","borderWidth","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ethanreynolds/Documents/Pet Projects/Rally Metrics Front End/my-app/src/component/HistoricalWorkBreakdown.tsx"],"sourcesContent":["import {\n    Chart as ChartJS,\n    CategoryScale,\n    LinearScale,\n    BarElement,\n    Title,\n    Tooltip,\n    Legend,\n} from 'chart.js';\nimport { useEffect, useState } from 'react';\nimport { Line, Bar } from 'react-chartjs-2';\n\nChartJS.register(\n    CategoryScale,\n    LinearScale,\n    BarElement,\n    Title,\n    Tooltip,\n    Legend\n);\n\ninterface graphInterface {\n    iteration: string,\n    totalStories: number\n}\ninterface allGraphData {\n    iteration: string[],\n    enhancements: number[],\n    security: number[],\n    feature: number[],\n    defect: number[],\n    stabilization: number[]\n}\n\nexport function HistoricalWorkBreakdown(d: allGraphData) {\n    console.log(d.iteration);\n    const total = d.defect.map((x, index) => {\n        return x + d.enhancements[index] + d.feature[index] + d.security[index] + d.stabilization[index];\n    })\n\n    const data = {\n        labels: d.iteration,\n        options: {\n            tooltips: {\n                displayColors: true,\n                callbacks: {\n                    mode: 'x',\n                },\n            },\n            scales: {\n                xAxes: [{\n                    stacked: true,\n                    gridLines: {\n                        display: false,\n                    }\n                }],\n                yAxes: [{\n                    stacked: true,\n                    ticks: {\n                        beginAtZero: true,\n                    },\n                    type: 'linear',\n                }]\n            },\n            responsive: true,\n            maintainAspectRatio: false,\n            legend: { position: 'bottom' },\n        },\n        datasets: [\n            {\n                label: 'ENHANCEMENT',\n                data: d.enhancements,\n                // you can set indiviual colors for each bar\n                backgroundColor: [\n                    'rgba(201, 203, 207, 0.2)'\n                ],\n                borderColor: [\n                    'rgb(201, 203, 207)'\n                ],\n                borderWidth: 2,\n            },\n            {\n                label: 'SECURITY',\n                data: d.security,\n                backgroundColor: [\n                    'rgba(255, 205, 86, 0.2)'\n                ],\n                borderColor: [\n                    'rgb(255, 205, 86)'\n                ],\n                borderWidth: 2,\n            },\n            {\n                label: 'STABILIZATION',\n                data: d.stabilization,\n                // you can set indiviual colors for each bar\n                backgroundColor: [\n                    'rgba(75, 192, 192, 0.2)'\n                ],\n                borderColor: [\n                    'rgb(75, 192, 192)'\n                ],\n                borderWidth: 2,\n            },\n            {\n                label: 'DEFECT',\n                data: d.defect,\n                // you can set indiviual colors for each bar\n                backgroundColor: [\n                    'rgba(153, 102, 255, 0.2)'\n                ],\n                borderColor: [\n                    'rgb(54, 162, 235)'\n                ],\n                borderWidth: 2,\n            },\n            {\n                label: 'FEATURE',\n                data: d.feature,\n                // you can set indiviual colors for each bar\n                backgroundColor: [\n                    'rgba(255, 159, 64, 0.2)'\n                ],\n                borderColor: [\n                    'rgb(255, 159, 64)'\n                ],\n                borderWidth: 2,\n            },\n            {\n                label: 'TOTAL',\n                data: total,\n                // you can set indiviual colors for each bar\n                backgroundColor: [\n                    'rgba(255, 99, 132, 0.2)'\n                ],\n                borderColor: [\n                    'rgb(255, 99, 132)'\n                ],\n                borderWidth: 1,\n            }\n        ]\n    };\n\n    return <Bar data={data} />;\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}