{"ast":null,"code":"var _jsxFileName = \"/Users/ethanreynolds/Documents/Pet Projects/Rally Metrics Front End/my-app/src/App.tsx\";\nimport React from 'react';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip } from 'chart.js';\nimport './App.css';\nimport { WorkBreakdownByIteration } from './component/WorkBreakdown';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip);\n\n// interface graphInterface {\n//   storyType: string,\n//   totalStories: number\n//   totalPoints: number\n// }\nfunction App() {\n  const c = {\n    iteration: '',\n    enhancements: 0,\n    security: 0,\n    feature: 0,\n    defect: 0,\n    stabilization: 0\n  };\n  // USER VELOCITY\n  // const [data, setData] = useState<graphInterface[]>([c])\n  // // const result = fetch('http://127.0.0.1:8000/breakdown/499934195612').then(resp => resp.json()).then(json => setData(json))\n  // const [x, setX] = useState<number[]>(data.map(d => d.id))\n  // const [y, setY] = useState<number[]>(data.map(d => d.velocity))\n\n  // useEffect(() => {\n  //   setX(data.map(d => d.id))\n  //   setY(data.map(d => d.velocity))\n  // }, [data])\n\n  //WORK BREAKDOWN BY ITERATION\n  // const [data, setData] = useState<graphInterface[]>([c]);\n  // const [x, setX] = useState<string[]>(data.map(d => d.storyType))\n  // const [y, setY] = useState<number[]>(data.map(d => d.totalStories))\n  // const [y1, setY1] = useState<number[]>(data.map(d => d.totalPoints))\n\n  // let arr1: number[] = [];\n  // let arr3: number[] = [];\n  // let arr2: string[] = [];\n\n  // function handleClick() {\n  //   fetch('http://127.0.0.1:8000/breakdown/499934195612', {\n  //     method: 'GET',\n  //     headers: {\n  //       accept: 'application/json',\n  //     },\n  //   }).then(resp => resp.json()).then(json => setData(json));\n  // }\n  // useEffect(() => {\n\n  //   data.map(d => {\n  //     arr1.push(d.totalStories);\n  //     arr3.push(d.totalPoints);\n  //     arr2.push(d.storyType)\n  //   })\n  //   setY(arr1);\n  //   setX(arr2);\n  //   setY1(arr3);\n  // }, [data])\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [\"Iteration Data\", /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleClick(),\n      children: \"Get Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(WorkBreakdownByIteration, {\n        storyType: x,\n        totalStories: y,\n        totalPoints: y1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","WorkBreakdownByIteration","jsxDEV","_jsxDEV","register","App","c","iteration","enhancements","security","feature","defect","stabilization","className","children","onClick","handleClick","fileName","_jsxFileName","lineNumber","columnNumber","storyType","x","totalStories","y","totalPoints","y1","_c","$RefreshReg$"],"sources":["/Users/ethanreynolds/Documents/Pet Projects/Rally Metrics Front End/my-app/src/App.tsx"],"sourcesContent":["import React, { useRef } from 'react';\nimport { useEffect, useState } from 'react';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n} from 'chart.js';\nimport './App.css';\nimport { UserVelocity } from './component/Bar';\nimport { WorkBreakdownByIteration } from './component/WorkBreakdown';\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip\n);\n\n// interface graphInterface {\n//   storyType: string,\n//   totalStories: number\n//   totalPoints: number\n// }\n\ninterface graphInterface {\n  iteration: string,\n  enhancements: number,\n  security: number,\n  feature: number,\n  defect: number,\n  stabilization: number\n}\n\nfunction App() {\n\n  const c: graphInterface = {\n    iteration: '',\n    enhancements: 0,\n    security: 0,\n    feature: 0,\n    defect: 0,\n    stabilization: 0\n\n  }\n  // USER VELOCITY\n  // const [data, setData] = useState<graphInterface[]>([c])\n  // // const result = fetch('http://127.0.0.1:8000/breakdown/499934195612').then(resp => resp.json()).then(json => setData(json))\n  // const [x, setX] = useState<number[]>(data.map(d => d.id))\n  // const [y, setY] = useState<number[]>(data.map(d => d.velocity))\n\n  // useEffect(() => {\n  //   setX(data.map(d => d.id))\n  //   setY(data.map(d => d.velocity))\n  // }, [data])\n\n  //WORK BREAKDOWN BY ITERATION\n  // const [data, setData] = useState<graphInterface[]>([c]);\n  // const [x, setX] = useState<string[]>(data.map(d => d.storyType))\n  // const [y, setY] = useState<number[]>(data.map(d => d.totalStories))\n  // const [y1, setY1] = useState<number[]>(data.map(d => d.totalPoints))\n\n  // let arr1: number[] = [];\n  // let arr3: number[] = [];\n  // let arr2: string[] = [];\n\n  // function handleClick() {\n  //   fetch('http://127.0.0.1:8000/breakdown/499934195612', {\n  //     method: 'GET',\n  //     headers: {\n  //       accept: 'application/json',\n  //     },\n  //   }).then(resp => resp.json()).then(json => setData(json));\n  // }\n  // useEffect(() => {\n\n  //   data.map(d => {\n  //     arr1.push(d.totalStories);\n  //     arr3.push(d.totalPoints);\n  //     arr2.push(d.storyType)\n  //   })\n  //   setY(arr1);\n  //   setX(arr2);\n  //   setY1(arr3);\n  // }, [data])\n\n  return (\n    <div className=\"App\">\n      Iteration Data\n      <button onClick={() => handleClick()}>Get Data</button>\n      <div>\n        <WorkBreakdownByIteration\n          storyType={x}\n          totalStories={y}\n          totalPoints={y1} />\n      </div>\n      <div>\n\n      </div>\n\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAkB,OAAO;AAErC,SACEC,KAAK,IAAIC,OAAO,EAChBC,aAAa,EACbC,WAAW,EACXC,UAAU,EACVC,KAAK,EACLC,OAAO,QACF,UAAU;AACjB,OAAO,WAAW;AAElB,SAASC,wBAAwB,QAAQ,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErER,OAAO,CAACS,QAAQ,CACdR,aAAa,EACbC,WAAW,EACXC,UAAU,EACVC,KAAK,EACLC,OAAO,CACR;;AAED;AACA;AACA;AACA;AACA;AAWA,SAASK,GAAGA,CAAA,EAAG;EAEb,MAAMC,CAAiB,GAAG;IACxBC,SAAS,EAAE,EAAE;IACbC,YAAY,EAAE,CAAC;IACfC,QAAQ,EAAE,CAAC;IACXC,OAAO,EAAE,CAAC;IACVC,MAAM,EAAE,CAAC;IACTC,aAAa,EAAE;EAEjB,CAAC;EACD;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACET,OAAA;IAAKU,SAAS,EAAC,KAAK;IAAAC,QAAA,GAAC,gBAEnB,eAAAX,OAAA;MAAQY,OAAO,EAAEA,CAAA,KAAMC,WAAW,EAAG;MAAAF,QAAA,EAAC;IAAQ;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS,eACvDjB,OAAA;MAAAW,QAAA,eACEX,OAAA,CAACF,wBAAwB;QACvBoB,SAAS,EAAEC,CAAE;QACbC,YAAY,EAAEC,CAAE;QAChBC,WAAW,EAAEC;MAAG;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAG;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACjB,eACNjB,OAAA;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAEM;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAEF;AAEV;AAACO,EAAA,GApEQtB,GAAG;AAsEZ,eAAeA,GAAG;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}