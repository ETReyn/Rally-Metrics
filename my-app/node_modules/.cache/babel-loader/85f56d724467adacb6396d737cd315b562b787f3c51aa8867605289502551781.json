{"ast":null,"code":"var _jsxFileName = \"/Users/ethanreynolds/Documents/Pet Projects/Rally Metrics Front End/my-app/src/component/Bar.tsx\",\n  _s = $RefreshSig$();\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\nimport { useState } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\nexport const DemoComponent = () => {\n  _s();\n  const labels = ['January', 'February', 'March', 'April', 'May', 'June', 'July'];\n  const [data, setData] = useState({\n    labels: labels,\n    datasets: [{\n      label: 'Expenses by Month',\n      data: [65, 59, 80, 81, 56, 55, 40],\n      backgroundColor: ['rgb(153, 102, 255)'],\n      borderColor: ['rgb(153, 102, 255)'],\n      borderWidth: 1\n    }]\n  });\n  return /*#__PURE__*/_jsxDEV(Bar, {\n    data: data\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 12\n  }, this);\n};\n_s(DemoComponent, \"KTc9M2y33kNphuzZZZYJUx1YYYs=\");\n_c = DemoComponent;\nvar _c;\n$RefreshReg$(_c, \"DemoComponent\");","map":{"version":3,"names":["Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","useState","Bar","jsxDEV","_jsxDEV","register","DemoComponent","_s","labels","data","setData","datasets","label","backgroundColor","borderColor","borderWidth","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ethanreynolds/Documents/Pet Projects/Rally Metrics Front End/my-app/src/component/Bar.tsx"],"sourcesContent":["import {\n    Chart as ChartJS,\n    CategoryScale,\n    LinearScale,\n    BarElement,\n    Title,\n    Tooltip,\n    Legend,\n} from 'chart.js';\nimport { useState } from 'react';\nimport { Bar } from 'react-chartjs-2';\n\nChartJS.register(\n    CategoryScale,\n    LinearScale,\n    BarElement,\n    Title,\n    Tooltip,\n    Legend\n);\nexport const DemoComponent: React.FC<{}> = () => {\n    const labels = ['January', 'February', 'March', 'April', 'May', 'June', 'July'];\n    const [data, setData] = useState({\n        labels: labels,\n        datasets: [{\n            label: 'Expenses by Month',\n            data: [65, 59, 80, 81, 56, 55, 40],\n            backgroundColor: [\n                'rgb(153, 102, 255)'\n            ],\n            borderColor: [\n                'rgb(153, 102, 255)'\n            ],\n            borderWidth: 1\n        }]\n    });\n\n    return <Bar data={data} />;\n};"],"mappings":";;AAAA,SACIA,KAAK,IAAIC,OAAO,EAChBC,aAAa,EACbC,WAAW,EACXC,UAAU,EACVC,KAAK,EACLC,OAAO,EACPC,MAAM,QACH,UAAU;AACjB,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,GAAG,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtCV,OAAO,CAACW,QAAQ,CACZV,aAAa,EACbC,WAAW,EACXC,UAAU,EACVC,KAAK,EACLC,OAAO,EACPC,MAAM,CACT;AACD,OAAO,MAAMM,aAA2B,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7C,MAAMC,MAAM,GAAG,CAAC,SAAS,EAAE,UAAU,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,CAAC;EAC/E,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC;IAC7BO,MAAM,EAAEA,MAAM;IACdG,QAAQ,EAAE,CAAC;MACPC,KAAK,EAAE,mBAAmB;MAC1BH,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;MAClCI,eAAe,EAAE,CACb,oBAAoB,CACvB;MACDC,WAAW,EAAE,CACT,oBAAoB,CACvB;MACDC,WAAW,EAAE;IACjB,CAAC;EACL,CAAC,CAAC;EAEF,oBAAOX,OAAA,CAACF,GAAG;IAACO,IAAI,EAAEA;EAAK;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAG;AAC9B,CAAC;AAACZ,EAAA,CAlBWD,aAA2B;AAAAc,EAAA,GAA3Bd,aAA2B;AAAA,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}