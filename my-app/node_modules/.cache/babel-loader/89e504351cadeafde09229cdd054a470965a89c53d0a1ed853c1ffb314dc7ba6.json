{"ast":null,"code":"var _jsxFileName = \"/Users/ethanreynolds/Documents/Pet Projects/Rally Metrics Front End/my-app/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState } from 'react';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip } from 'chart.js';\nimport './App.css';\nimport { Bar } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip);\nfunction App() {\n  _s();\n  const dta = [4, 5, 6];\n  const [graph, setGraph] = useState([]);\n  const [data, setData] = useState({\n    labels: [1, 2, 3],\n    datasets: dta.map(d => {\n      const point = {\n        // label: d + ' Average Velocity',\n        data: [d],\n        backgroundColor: ['rgb(153, 102, 255)'],\n        borderColor: ['rgb(153, 102, 255)'],\n        borderWidth: 1\n      };\n      return point;\n    })\n  });\n  const test = 1;\n\n  // useEffect(() => {\n  //   fetch('http://127.0.0.1:8000/velocity/users')\n  //     .then(response => response.json())\n  //     .then(d => {\n  //       setGraph(d);\n\n  //       setData({\n  //         labels: graph.map(point => point.id),\n  //         datasets: [{\n  //           label: 'Expenses by Month',\n  //           data: graph.map(point => point.velocity),\n  //           backgroundColor: [\n  //             'rgb(153, 102, 255)'\n  //           ],\n  //           borderColor: [\n  //             'rgb(153, 102, 255)'\n  //           ],\n  //           borderWidth: 1\n  //         }]\n  //       });\n\n  //     });\n  // }, [test])\n\n  const labels = graph.map(point => point.id);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(Bar, {\n        data: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"IFxjsscgJkI3ebUFBZtXYiXO+70=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Bar","jsxDEV","_jsxDEV","register","App","_s","dta","graph","setGraph","data","setData","labels","datasets","map","d","point","backgroundColor","borderColor","borderWidth","test","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ethanreynolds/Documents/Pet Projects/Rally Metrics Front End/my-app/src/App.tsx"],"sourcesContent":["import React from 'react';\nimport { useEffect, useState } from 'react';\nimport logo from './logo.svg';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend,\n} from 'chart.js';\nimport './App.css';\nimport { Bar } from 'react-chartjs-2';\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip\n);\n\ninterface graphInterface {\n  id: number,\n  velocity: number\n}\n\ninterface graphVisuals {\n  labels: [],\n  datasets: []\n}\n\nfunction App() {\n\n  const dta = [4, 5, 6]\n  const [graph, setGraph] = useState<graphInterface[]>([])\n  const [data, setData] = useState({\n    labels: [1, 2, 3],\n    datasets: dta.map(d => {\n      const point = {\n        // label: d + ' Average Velocity',\n        data: [d],\n        backgroundColor: [\n          'rgb(153, 102, 255)'\n        ],\n        borderColor: [\n          'rgb(153, 102, 255)'\n        ],\n        borderWidth: 1\n      }\n      return point\n    })\n  });\n\n  const test = 1\n\n  // useEffect(() => {\n  //   fetch('http://127.0.0.1:8000/velocity/users')\n  //     .then(response => response.json())\n  //     .then(d => {\n  //       setGraph(d);\n\n  //       setData({\n  //         labels: graph.map(point => point.id),\n  //         datasets: [{\n  //           label: 'Expenses by Month',\n  //           data: graph.map(point => point.velocity),\n  //           backgroundColor: [\n  //             'rgb(153, 102, 255)'\n  //           ],\n  //           borderColor: [\n  //             'rgb(153, 102, 255)'\n  //           ],\n  //           borderWidth: 1\n  //         }]\n  //       });\n\n  //     });\n  // }, [test])\n\n  const labels = graph.map(point => point.id)\n\n\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Bar data={data} />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAoBC,QAAQ,QAAQ,OAAO;AAE3C,SACEC,KAAK,IAAIC,OAAO,EAChBC,aAAa,EACbC,WAAW,EACXC,UAAU,EACVC,KAAK,EACLC,OAAO,QAEF,UAAU;AACjB,OAAO,WAAW;AAClB,SAASC,GAAG,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtCR,OAAO,CAACS,QAAQ,CACdR,aAAa,EACbC,WAAW,EACXC,UAAU,EACVC,KAAK,EACLC,OAAO,CACR;AAYD,SAASK,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb,MAAMC,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACrB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAmB,EAAE,CAAC;EACxD,MAAM,CAACiB,IAAI,EAAEC,OAAO,CAAC,GAAGlB,QAAQ,CAAC;IAC/BmB,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACjBC,QAAQ,EAAEN,GAAG,CAACO,GAAG,CAACC,CAAC,IAAI;MACrB,MAAMC,KAAK,GAAG;QACZ;QACAN,IAAI,EAAE,CAACK,CAAC,CAAC;QACTE,eAAe,EAAE,CACf,oBAAoB,CACrB;QACDC,WAAW,EAAE,CACX,oBAAoB,CACrB;QACDC,WAAW,EAAE;MACf,CAAC;MACD,OAAOH,KAAK;IACd,CAAC;EACH,CAAC,CAAC;EAEF,MAAMI,IAAI,GAAG,CAAC;;EAEd;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAEA,MAAMR,MAAM,GAAGJ,KAAK,CAACM,GAAG,CAACE,KAAK,IAAIA,KAAK,CAACK,EAAE,CAAC;EAI3C,oBACElB,OAAA;IAAKmB,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBpB,OAAA;MAAQmB,SAAS,EAAC,YAAY;MAAAC,QAAA,eAC5BpB,OAAA,CAACF,GAAG;QAACS,IAAI,EAAEA;MAAK;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAG;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACZ;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACL;AAEV;AAACrB,EAAA,CA3DQD,GAAG;AAAAuB,EAAA,GAAHvB,GAAG;AA6DZ,eAAeA,GAAG;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}