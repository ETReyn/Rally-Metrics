{"ast":null,"code":"var _jsxFileName = \"/Users/ethanreynolds/Documents/Pet Projects/Rally Metrics Front End/my-app/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useEffect, useState } from 'react';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip } from 'chart.js/auto';\nimport './App.css';\nimport { HistoricalWorkBreakdown } from './component/HistoricalWorkBreakdown';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip);\n\n// interface graphInterface {\n//   storyType: string,\n//   totalStories: number\n//   totalPoints: number\n// }\nfunction App() {\n  _s();\n  const c = {\n    iteration: '',\n    storyType: '',\n    totalStories: 0,\n    totalPoints: 0\n  };\n  const g = {\n    iteration: 'string',\n    totalStories: 0\n  };\n  // USER VELOCITY\n  const [data, setData] = useState([c]);\n  // const result = fetch('http://127.0.0.1:8000/breakdown/499934195612').then(resp => resp.json()).then(json => setData(json))\n  const [x, setX] = useState(data.map(d => d.id));\n  const [y, setY] = useState(data.map(d => d.velocity));\n  function handleClick() {\n    fetch('http://127.0.0.1:8000/breakdown/499934195612', {\n      method: 'GET',\n      headers: {\n        accept: 'application/json'\n      }\n    }).then(resp => resp.json()).then(json => setData(json));\n  }\n  useEffect(() => {\n    setX(data.map(d => d.id));\n    setY(data.map(d => d.velocity));\n  }, [data]);\n\n  // WORK BREAKDOWN BY ITERATION\n  // const [data, setData] = useState<graphInterface[]>([c]);\n  // const [x, setX] = useState<string[]>(data.map(d => d.storyType))\n  // const [y, setY] = useState<number[]>(data.map(d => d.totalStories))\n  // const [y1, setY1] = useState<number[]>(data.map(d => d.totalPoints))\n\n  // let arr1: number[] = [];\n  // let arr3: number[] = [];\n  // let arr2: string[] = [];\n\n  // function handleClick() {\n  //   fetch('http://127.0.0.1:8000/breakdown/499934195612', {\n  //     method: 'GET',\n  //     headers: {\n  //       accept: 'application/json',\n  //     },\n  //   }).then(resp => resp.json()).then(json => setData(json));\n  // }\n  // useEffect(() => {\n\n  //   data.map(d => {\n  //     arr1.push(d.totalStories);\n  //     arr3.push(d.totalPoints);\n  //     arr2.push(d.storyType)\n  //   })\n  //   setY(arr1);\n  //   setX(arr2);\n  //   setY1(arr3);\n  // }, [data])\n\n  // WORK BREAKDOWN BY ITERATION\n  // const [data, setData] = useState<dataInterface[]>([c]);\n  // const [enhancement, setEnhancement] = useState<number[]>([])\n  // const [security, setSecurity] = useState<number[]>([])\n  // const [stabilization, setStabilization] = useState<number[]>([])\n  // const [feature, setFeature] = useState<number[]>([])\n  // const [defect, setDefect] = useState<number[]>([])\n  // const [iteration, setIteration] = useState<string[]>([])\n\n  // function uniq(a: string[]) {\n  //   return Array.from(new Set(a));\n  // }\n\n  // function handleClick() {\n  //   fetch('http://127.0.0.1:8000/breakdown', {\n  //     method: 'GET',\n  //     headers: {\n  //       accept: 'application/json',\n  //     },\n  //   }).then(resp => resp.json()).then(json => setData(json));\n  // }\n  // useEffect(() => {\n  //   let enh: number[] = [];\n  //   let sec: number[] = [];\n  //   let sta: number[] = [];\n  //   let fea: number[] = [];\n  //   let def: number[] = [];\n  //   let iter: string[] = [];\n  //   const map1 = new Map();\n  //   data.map(d => {\n  //     if (d.storyType === \"DEFECT\") {\n  //       def.push(d.totalStories)\n  //     }\n  //     if (d.storyType === \"STABILIZATION\") {\n  //       sta.push(d.totalStories)\n  //     }\n  //     if (d.storyType === \"ENHANCEMENT\") {\n  //       enh.push(d.totalStories)\n  //     }\n  //     if (d.storyType === \"FEATURE\") {\n  //       fea.push(d.totalStories)\n  //     }\n  //     if (d.storyType === \"SECURITY\") {\n  //       sec.push(d.totalStories)\n  //     }\n  //     iter.push(d.iteration)\n  //     if (!map1.has(d.iteration)) {\n  //       map1.set(d.iteration, 0)\n  //     }\n  //     const newValue = d.totalStories + map1.get(d.iteration)\n  //     map1.set(d.iteration, newValue);\n  //   })\n  //   setEnhancement(enh);\n  //   setStabilization(sta);\n  //   setSecurity(sec);\n  //   setDefect(def);\n  //   setFeature(fea);\n  //   setIteration(uniq(iter));\n\n  // }, [data])\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [\"Iteration Data\", /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleClick(),\n      children: \"Get Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(HistoricalWorkBreakdown, {\n        enhancements: enhancement,\n        security: security,\n        stabilization: stabilization,\n        defect: defect,\n        feature: feature,\n        iteration: iteration\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 168,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"eqG06QaY086FxnbBse9YxAgJeKk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","HistoricalWorkBreakdown","jsxDEV","_jsxDEV","register","App","_s","c","iteration","storyType","totalStories","totalPoints","g","data","setData","x","setX","map","d","id","y","setY","velocity","handleClick","fetch","method","headers","accept","then","resp","json","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","enhancements","enhancement","security","stabilization","defect","feature","_c","$RefreshReg$"],"sources":["/Users/ethanreynolds/Documents/Pet Projects/Rally Metrics Front End/my-app/src/App.tsx"],"sourcesContent":["import React, { useRef } from 'react';\nimport { useEffect, useState } from 'react';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n} from 'chart.js/auto';\nimport './App.css';\nimport { UserVelocity } from './component/Bar';\nimport { WorkBreakdownByIteration } from './component/WorkBreakdown';\nimport { HistoricalWorkBreakdown } from './component/HistoricalWorkBreakdown';\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip\n);\n\n// interface graphInterface {\n//   storyType: string,\n//   totalStories: number\n//   totalPoints: number\n// }\n\ninterface graphInterface {\n  iteration: string,\n  totalStories: number\n}\n\n\n\ninterface dataInterface {\n  storyType: string,\n  totalStories: number,\n  totalPoints: number,\n  iteration: string\n}\n\nfunction App() {\n\n  const c: dataInterface = {\n    iteration: '',\n    storyType: '',\n    totalStories: 0,\n    totalPoints: 0,\n  }\n  const g: graphInterface = {\n    iteration: 'string',\n    totalStories: 0\n  }\n  // USER VELOCITY\n  const [data, setData] = useState<graphInterface[]>([c])\n  // const result = fetch('http://127.0.0.1:8000/breakdown/499934195612').then(resp => resp.json()).then(json => setData(json))\n  const [x, setX] = useState<number[]>(data.map(d => d.id))\n  const [y, setY] = useState<number[]>(data.map(d => d.velocity))\n\n  function handleClick() {\n    fetch('http://127.0.0.1:8000/breakdown/499934195612', {\n      method: 'GET',\n      headers: {\n        accept: 'application/json',\n      },\n    }).then(resp => resp.json()).then(json => setData(json));\n  }\n\n  useEffect(() => {\n    setX(data.map(d => d.id))\n    setY(data.map(d => d.velocity))\n  }, [data])\n\n  // WORK BREAKDOWN BY ITERATION\n  // const [data, setData] = useState<graphInterface[]>([c]);\n  // const [x, setX] = useState<string[]>(data.map(d => d.storyType))\n  // const [y, setY] = useState<number[]>(data.map(d => d.totalStories))\n  // const [y1, setY1] = useState<number[]>(data.map(d => d.totalPoints))\n\n  // let arr1: number[] = [];\n  // let arr3: number[] = [];\n  // let arr2: string[] = [];\n\n  // function handleClick() {\n  //   fetch('http://127.0.0.1:8000/breakdown/499934195612', {\n  //     method: 'GET',\n  //     headers: {\n  //       accept: 'application/json',\n  //     },\n  //   }).then(resp => resp.json()).then(json => setData(json));\n  // }\n  // useEffect(() => {\n\n  //   data.map(d => {\n  //     arr1.push(d.totalStories);\n  //     arr3.push(d.totalPoints);\n  //     arr2.push(d.storyType)\n  //   })\n  //   setY(arr1);\n  //   setX(arr2);\n  //   setY1(arr3);\n  // }, [data])\n\n  // WORK BREAKDOWN BY ITERATION\n  // const [data, setData] = useState<dataInterface[]>([c]);\n  // const [enhancement, setEnhancement] = useState<number[]>([])\n  // const [security, setSecurity] = useState<number[]>([])\n  // const [stabilization, setStabilization] = useState<number[]>([])\n  // const [feature, setFeature] = useState<number[]>([])\n  // const [defect, setDefect] = useState<number[]>([])\n  // const [iteration, setIteration] = useState<string[]>([])\n\n  // function uniq(a: string[]) {\n  //   return Array.from(new Set(a));\n  // }\n\n  // function handleClick() {\n  //   fetch('http://127.0.0.1:8000/breakdown', {\n  //     method: 'GET',\n  //     headers: {\n  //       accept: 'application/json',\n  //     },\n  //   }).then(resp => resp.json()).then(json => setData(json));\n  // }\n  // useEffect(() => {\n  //   let enh: number[] = [];\n  //   let sec: number[] = [];\n  //   let sta: number[] = [];\n  //   let fea: number[] = [];\n  //   let def: number[] = [];\n  //   let iter: string[] = [];\n  //   const map1 = new Map();\n  //   data.map(d => {\n  //     if (d.storyType === \"DEFECT\") {\n  //       def.push(d.totalStories)\n  //     }\n  //     if (d.storyType === \"STABILIZATION\") {\n  //       sta.push(d.totalStories)\n  //     }\n  //     if (d.storyType === \"ENHANCEMENT\") {\n  //       enh.push(d.totalStories)\n  //     }\n  //     if (d.storyType === \"FEATURE\") {\n  //       fea.push(d.totalStories)\n  //     }\n  //     if (d.storyType === \"SECURITY\") {\n  //       sec.push(d.totalStories)\n  //     }\n  //     iter.push(d.iteration)\n  //     if (!map1.has(d.iteration)) {\n  //       map1.set(d.iteration, 0)\n  //     }\n  //     const newValue = d.totalStories + map1.get(d.iteration)\n  //     map1.set(d.iteration, newValue);\n  //   })\n  //   setEnhancement(enh);\n  //   setStabilization(sta);\n  //   setSecurity(sec);\n  //   setDefect(def);\n  //   setFeature(fea);\n  //   setIteration(uniq(iter));\n\n  // }, [data])\n\n  return (\n    <div className=\"App\">\n      Iteration Data\n      <button onClick={() => handleClick()}>Get Data</button>\n      <div>\n        <HistoricalWorkBreakdown\n          enhancements={enhancement}\n          security={security}\n          stabilization={stabilization}\n          defect={defect}\n          feature={feature}\n          iteration={iteration}\n        />\n      </div>\n\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}