{"ast":null,"code":"import{Chart as ChartJS,CategoryScale,LinearScale,BarElement,Title,Tooltip,Legend}from'chart.js';import{Bar}from'react-chartjs-2';import{jsx as _jsx}from\"react/jsx-runtime\";ChartJS.register(CategoryScale,LinearScale,BarElement,Title,Tooltip,Legend);export function UserVelocity(inputData){var velocity=inputData.velocity;var capacity=inputData.capacity;var ids=inputData.id;var data={labels:ids,datasets:[{label:'User Velocity',data:velocity,// you can set indiviual colors for each bar\nbackgroundColor:['rgba(255, 99, 132, 0.2)','rgba(255, 159, 64, 0.2)','rgba(255, 205, 86, 0.2)','rgba(75, 192, 192, 0.2)','rgba(54, 162, 235, 0.2)','rgba(153, 102, 255, 0.2)','rgba(201, 203, 207, 0.2)'],borderColor:['rgb(255, 99, 132)','rgb(255, 159, 64)','rgb(255, 205, 86)','rgb(75, 192, 192)','rgb(54, 162, 235)','rgb(153, 102, 255)','rgb(201, 203, 207)'],borderWidth:2},{label:'User Capacity',data:capacity,// you can set indiviual colors for each bar\nbackgroundColor:['rgba(255, 99, 132, 0.2)','rgba(255, 159, 64, 0.2)','rgba(255, 205, 86, 0.2)','rgba(75, 192, 192, 0.2)','rgba(54, 162, 235, 0.2)','rgba(153, 102, 255, 0.2)','rgba(201, 203, 207, 0.2)'],borderColor:['rgb(255, 99, 132)','rgb(255, 159, 64)','rgb(255, 205, 86)','rgb(75, 192, 192)','rgb(54, 162, 235)','rgb(153, 102, 255)','rgb(201, 203, 207)'],borderWidth:2}]};// console.log(y)\nreturn/*#__PURE__*/_jsx(Bar,{data:data});};","map":{"version":3,"names":["Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","Bar","jsx","_jsx","register","UserVelocity","inputData","velocity","capacity","ids","id","data","labels","datasets","label","backgroundColor","borderColor","borderWidth"],"sources":["/Users/ethanreynolds/Documents/Pet Projects/Rally-Metrics/my-app/src/component/Bar.tsx"],"sourcesContent":["import {\n    Chart as ChartJS,\n    CategoryScale,\n    LinearScale,\n    BarElement,\n    Title,\n    Tooltip,\n    Legend,\n} from 'chart.js';\nimport { useEffect, useState } from 'react';\nimport { Bar } from 'react-chartjs-2';\n\nChartJS.register(\n    CategoryScale,\n    LinearScale,\n    BarElement,\n    Title,\n    Tooltip,\n    Legend\n);\n\ninterface graphInterface {\n    id: number[],\n    velocity: number[],\n    capacity: number[]\n}\n\nexport function UserVelocity(inputData: graphInterface) {\n\n    const velocity = inputData.velocity\n    const capacity = inputData.capacity\n    const ids = inputData.id\n\n    const data = {\n        labels: ids,\n        datasets: [\n            {\n                label: 'User Velocity',\n                data: velocity,\n                // you can set indiviual colors for each bar\n                backgroundColor: [\n                    'rgba(255, 99, 132, 0.2)',\n                    'rgba(255, 159, 64, 0.2)',\n                    'rgba(255, 205, 86, 0.2)',\n                    'rgba(75, 192, 192, 0.2)',\n                    'rgba(54, 162, 235, 0.2)',\n                    'rgba(153, 102, 255, 0.2)',\n                    'rgba(201, 203, 207, 0.2)'\n                ],\n                borderColor: [\n                    'rgb(255, 99, 132)',\n                    'rgb(255, 159, 64)',\n                    'rgb(255, 205, 86)',\n                    'rgb(75, 192, 192)',\n                    'rgb(54, 162, 235)',\n                    'rgb(153, 102, 255)',\n                    'rgb(201, 203, 207)'\n                ],\n                borderWidth: 2,\n            }, {\n                label: 'User Capacity',\n                data: capacity,\n                // you can set indiviual colors for each bar\n                backgroundColor: [\n                    'rgba(255, 99, 132, 0.2)',\n                    'rgba(255, 159, 64, 0.2)',\n                    'rgba(255, 205, 86, 0.2)',\n                    'rgba(75, 192, 192, 0.2)',\n                    'rgba(54, 162, 235, 0.2)',\n                    'rgba(153, 102, 255, 0.2)',\n                    'rgba(201, 203, 207, 0.2)'\n                ],\n                borderColor: [\n                    'rgb(255, 99, 132)',\n                    'rgb(255, 159, 64)',\n                    'rgb(255, 205, 86)',\n                    'rgb(75, 192, 192)',\n                    'rgb(54, 162, 235)',\n                    'rgb(153, 102, 255)',\n                    'rgb(201, 203, 207)'\n                ],\n                borderWidth: 2,\n            }\n        ]\n    };\n    // console.log(y)\n\n    return <Bar data={data} />;\n};\n\n"],"mappings":"AAAA,OACIA,KAAK,GAAI,CAAAC,OAAO,CAChBC,aAAa,CACbC,WAAW,CACXC,UAAU,CACVC,KAAK,CACLC,OAAO,CACPC,MAAM,KACH,UAAU,CAEjB,OAASC,GAAG,KAAQ,iBAAiB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEtCT,OAAO,CAACU,QAAQ,CACZT,aAAa,CACbC,WAAW,CACXC,UAAU,CACVC,KAAK,CACLC,OAAO,CACPC,MAAM,CACT,CAQD,MAAO,SAAS,CAAAK,YAAYA,CAACC,SAAyB,CAAE,CAEpD,GAAM,CAAAC,QAAQ,CAAGD,SAAS,CAACC,QAAQ,CACnC,GAAM,CAAAC,QAAQ,CAAGF,SAAS,CAACE,QAAQ,CACnC,GAAM,CAAAC,GAAG,CAAGH,SAAS,CAACI,EAAE,CAExB,GAAM,CAAAC,IAAI,CAAG,CACTC,MAAM,CAAEH,GAAG,CACXI,QAAQ,CAAE,CACN,CACIC,KAAK,CAAE,eAAe,CACtBH,IAAI,CAAEJ,QAAQ,CACd;AACAQ,eAAe,CAAE,CACb,yBAAyB,CACzB,yBAAyB,CACzB,yBAAyB,CACzB,yBAAyB,CACzB,yBAAyB,CACzB,0BAA0B,CAC1B,0BAA0B,CAC7B,CACDC,WAAW,CAAE,CACT,mBAAmB,CACnB,mBAAmB,CACnB,mBAAmB,CACnB,mBAAmB,CACnB,mBAAmB,CACnB,oBAAoB,CACpB,oBAAoB,CACvB,CACDC,WAAW,CAAE,CACjB,CAAC,CAAE,CACCH,KAAK,CAAE,eAAe,CACtBH,IAAI,CAAEH,QAAQ,CACd;AACAO,eAAe,CAAE,CACb,yBAAyB,CACzB,yBAAyB,CACzB,yBAAyB,CACzB,yBAAyB,CACzB,yBAAyB,CACzB,0BAA0B,CAC1B,0BAA0B,CAC7B,CACDC,WAAW,CAAE,CACT,mBAAmB,CACnB,mBAAmB,CACnB,mBAAmB,CACnB,mBAAmB,CACnB,mBAAmB,CACnB,oBAAoB,CACpB,oBAAoB,CACvB,CACDC,WAAW,CAAE,CACjB,CAAC,CAET,CAAC,CACD;AAEA,mBAAOd,IAAA,CAACF,GAAG,EAACU,IAAI,CAAEA,IAAK,EAAG,CAC9B,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}