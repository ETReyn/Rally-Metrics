{"ast":null,"code":"import{Chart as ChartJS,CategoryScale,LinearScale,BarElement,Title,Tooltip,Legend}from'chart.js';import{Bar}from'react-chartjs-2';import{handleBreakdown}from'../App';import{jsx as _jsx}from\"react/jsx-runtime\";ChartJS.register(CategoryScale,LinearScale,BarElement,Title,Tooltip,Legend);export function HistoricalWorkBreakdown(d){console.log(d.iteration);var total=d.defect.map(function(x,index){return x+d.enhancements[index]+d.feature[index]+d.security[index]+d.stabilization[index];});var data={labels:d.iteration,datasets:[{stack:\"stack1\",label:'ENHANCEMENT',data:d.enhancements,// you can set indiviual colors for each bar\nbackgroundColor:['rgba(201, 203, 207, 0.2)'],borderColor:['rgb(201, 203, 207)'],borderWidth:2},{stack:\"stack1\",label:'SECURITY',data:d.security,backgroundColor:['rgba(255, 205, 86, 0.2)'],borderColor:['rgb(255, 205, 86)'],borderWidth:2},{stack:\"stack1\",label:'STABILIZATION',data:d.stabilization,// you can set indiviual colors for each bar\nbackgroundColor:['rgba(75, 192, 192, 0.2)'],borderColor:['rgb(75, 192, 192)'],borderWidth:2},{stack:\"stack1\",label:'DEFECT',data:d.defect,// you can set indiviual colors for each bar\nbackgroundColor:['rgba(153, 102, 255, 0.2)'],borderColor:['rgb(54, 162, 235)'],borderWidth:2},{stack:\"stack1\",label:'FEATURE',data:d.feature,// you can set indiviual colors for each bar\nbackgroundColor:['rgba(255, 159, 64, 0.2)'],borderColor:['rgb(255, 159, 64)'],borderWidth:2}// {\n//     stack: \"stack2\",\n//     label: 'TOTAL',\n//     data: total,\n//     // you can set indiviual colors for each bar\n//     backgroundColor: [\n//         'rgba(255, 99, 132, 0.2)'\n//     ],\n//     borderColor: [\n//         'rgb(255, 99, 132)'\n//     ],\n//     borderWidth: 1,\n// }\n]};return/*#__PURE__*/_jsx(Bar,{data:data,options:{onClick:function onClick(evt,element){if(element.length>0){var ind=element[0].index;// if(confirm('Do you want to remove this point?')){\n//   data.datasets[0].data.splice(ind, 1);\n//   data.labels.splice(ind, 1);\n//   }\nconsole.log(d.iteration[ind]);d.setIterationId(d.iteration[ind]);handleBreakdown(d.newData,d.iteration[ind]);}}}});};","map":{"version":3,"names":["Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","Bar","handleBreakdown","jsx","_jsx","register","HistoricalWorkBreakdown","d","console","log","iteration","total","defect","map","x","index","enhancements","feature","security","stabilization","data","labels","datasets","stack","label","backgroundColor","borderColor","borderWidth","options","onClick","evt","element","length","ind","setIterationId","newData"],"sources":["/Users/ethanreynolds/Documents/Pet Projects/Rally-Metrics/my-app/src/component/HistoricalWorkBreakdown.tsx"],"sourcesContent":["import {\n    Chart as ChartJS,\n    CategoryScale,\n    LinearScale,\n    BarElement,\n    Title,\n    Tooltip,\n    Legend,\n    Chart,\n} from 'chart.js';\nimport { MouseEventHandler, useEffect, useState } from 'react';\nimport { Line, Bar } from 'react-chartjs-2';\nimport { handleBreakdown } from '../App';\n\nChartJS.register(\n    CategoryScale,\n    LinearScale,\n    BarElement,\n    Title,\n    Tooltip,\n    Legend\n);\n\ninterface handleData {\n    setData3(data:any): any,\n    setVel(val:boolean):any,\n    setHistoric(val:boolean):any,\n    setBreakdown(val:boolean):any,\n  }\n\n\ninterface graphInterface {\n    iteration: string,\n    totalStories: number\n}\ninterface allGraphData {\n    iteration: string[],\n    enhancements: number[],\n    security: number[],\n    feature: number[],\n    defect: number[],\n    stabilization: number[],\n    setIterationId(val:string): void,\n    newData:handleData,\n}\n\nexport function HistoricalWorkBreakdown(d: allGraphData) {\n    console.log(d.iteration);\n    const total = d.defect.map((x, index) => {\n        return x + d.enhancements[index] + d.feature[index] + d.security[index] + d.stabilization[index];\n    })\n\n    const data = {\n        labels: d.iteration,\n        datasets: [\n            {\n                stack: \"stack1\",\n                label: 'ENHANCEMENT',\n                data: d.enhancements,\n                // you can set indiviual colors for each bar\n                backgroundColor: [\n                    'rgba(201, 203, 207, 0.2)'\n                ],\n                borderColor: [\n                    'rgb(201, 203, 207)'\n                ],\n                borderWidth: 2,\n            },\n            {\n                stack: \"stack1\",\n                label: 'SECURITY',\n                data: d.security,\n                backgroundColor: [\n                    'rgba(255, 205, 86, 0.2)'\n                ],\n                borderColor: [\n                    'rgb(255, 205, 86)'\n                ],\n                borderWidth: 2,\n            },\n            {\n                stack: \"stack1\",\n                label: 'STABILIZATION',\n                data: d.stabilization,\n                // you can set indiviual colors for each bar\n                backgroundColor: [\n                    'rgba(75, 192, 192, 0.2)'\n                ],\n                borderColor: [\n                    'rgb(75, 192, 192)'\n                ],\n                borderWidth: 2,\n            },\n            {\n                stack: \"stack1\",\n                label: 'DEFECT',\n                data: d.defect,\n                // you can set indiviual colors for each bar\n                backgroundColor: [\n                    'rgba(153, 102, 255, 0.2)'\n                ],\n                borderColor: [\n                    'rgb(54, 162, 235)'\n                ],\n                borderWidth: 2,\n            },\n            {\n                stack: \"stack1\",\n                label: 'FEATURE',\n                data: d.feature,\n                // you can set indiviual colors for each bar\n                backgroundColor: [\n                    'rgba(255, 159, 64, 0.2)'\n                ],\n                borderColor: [\n                    'rgb(255, 159, 64)'\n                ],\n                borderWidth: 2,\n            },\n            // {\n            //     stack: \"stack2\",\n            //     label: 'TOTAL',\n            //     data: total,\n            //     // you can set indiviual colors for each bar\n            //     backgroundColor: [\n            //         'rgba(255, 99, 132, 0.2)'\n            //     ],\n            //     borderColor: [\n            //         'rgb(255, 99, 132)'\n            //     ],\n            //     borderWidth: 1,\n            // }\n        ]\n    };\n\n    return <Bar \n    data={data} \n    options={{\n        onClick: function(evt, element) {\n          if(element.length > 0)\n          {\n            var ind = element[0].index;\n            // if(confirm('Do you want to remove this point?')){\n            //   data.datasets[0].data.splice(ind, 1);\n            //   data.labels.splice(ind, 1);\n            //   }\n            console.log(d.iteration[ind])\n            d.setIterationId(d.iteration[ind])\n            handleBreakdown(d.newData, d.iteration[ind])\n            }\n        }\n        }}  />;\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}