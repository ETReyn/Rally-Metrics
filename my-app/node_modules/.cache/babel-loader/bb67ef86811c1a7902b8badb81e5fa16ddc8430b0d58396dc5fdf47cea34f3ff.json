{"ast":null,"code":"var _jsxFileName = \"/Users/ethanreynolds/Documents/Pet Projects/Rally Metrics Front End/my-app/src/component/Bar.tsx\",\n  _s = $RefreshSig$();\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\nimport { useState } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\nfunction BarGraph(graph) {\n  _s();\n  // const dta = [4, 5, 6]\n  // const [graph, setGraph] = useState<graphInterface[]>([])\n  const [data, setData] = useState({\n    labels: [1, 2, 3],\n    datasets: graph.map(d => {\n      const point = {\n        label: d + ' Average Velocity',\n        data: [d],\n        backgroundColor: ['rgb(153, 102, 255)'],\n        borderColor: ['rgb(153, 102, 255)'],\n        borderWidth: 1\n      };\n      return point;\n    })\n  });\n  const test = 1;\n  return /*#__PURE__*/_jsxDEV(Bar, {\n    data: data\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 12\n  }, this);\n}\n_s(BarGraph, \"0i3nF2mLDLW2r6CfkaWJv4doSxY=\");\n_c = BarGraph;\n;\nvar _c;\n$RefreshReg$(_c, \"BarGraph\");","map":{"version":3,"names":["Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","useState","Bar","jsxDEV","_jsxDEV","register","BarGraph","graph","_s","data","setData","labels","datasets","map","d","point","label","backgroundColor","borderColor","borderWidth","test","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ethanreynolds/Documents/Pet Projects/Rally Metrics Front End/my-app/src/component/Bar.tsx"],"sourcesContent":["import {\n    Chart as ChartJS,\n    CategoryScale,\n    LinearScale,\n    BarElement,\n    Title,\n    Tooltip,\n    Legend,\n} from 'chart.js';\nimport { useEffect, useState } from 'react';\nimport { Bar } from 'react-chartjs-2';\n\nChartJS.register(\n    CategoryScale,\n    LinearScale,\n    BarElement,\n    Title,\n    Tooltip,\n    Legend\n);\n\ninterface graphData {\n    data: [string]\n    label: [number]\n}\ninterface graphInterface {\n    id: number,\n    velocity: number\n}\n\ninterface graphVisuals {\n    labels: [],\n    datasets: []\n}\nfunction BarGraph(graph: graphInterface[]) {\n\n    // const dta = [4, 5, 6]\n    // const [graph, setGraph] = useState<graphInterface[]>([])\n    const [data, setData] = useState({\n        labels: [1, 2, 3],\n        datasets: graph.map(d => {\n            const point = {\n                label: d + ' Average Velocity',\n                data: [d],\n                backgroundColor: [\n                    'rgb(153, 102, 255)'\n                ],\n                borderColor: [\n                    'rgb(153, 102, 255)'\n                ],\n                borderWidth: 1\n            }\n            return point\n        })\n    });\n\n    const test = 1\n\n    return <Bar data={data} />;\n};"],"mappings":";;AAAA,SACIA,KAAK,IAAIC,OAAO,EAChBC,aAAa,EACbC,WAAW,EACXC,UAAU,EACVC,KAAK,EACLC,OAAO,EACPC,MAAM,QACH,UAAU;AACjB,SAAoBC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,GAAG,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtCV,OAAO,CAACW,QAAQ,CACZV,aAAa,EACbC,WAAW,EACXC,UAAU,EACVC,KAAK,EACLC,OAAO,EACPC,MAAM,CACT;AAeD,SAASM,QAAQA,CAACC,KAAuB,EAAE;EAAAC,EAAA;EAEvC;EACA;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC;IAC7BU,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACjBC,QAAQ,EAAEL,KAAK,CAACM,GAAG,CAACC,CAAC,IAAI;MACrB,MAAMC,KAAK,GAAG;QACVC,KAAK,EAAEF,CAAC,GAAG,mBAAmB;QAC9BL,IAAI,EAAE,CAACK,CAAC,CAAC;QACTG,eAAe,EAAE,CACb,oBAAoB,CACvB;QACDC,WAAW,EAAE,CACT,oBAAoB,CACvB;QACDC,WAAW,EAAE;MACjB,CAAC;MACD,OAAOJ,KAAK;IAChB,CAAC;EACL,CAAC,CAAC;EAEF,MAAMK,IAAI,GAAG,CAAC;EAEd,oBAAOhB,OAAA,CAACF,GAAG;IAACO,IAAI,EAAEA;EAAK;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAG;AAC9B;AAAChB,EAAA,CAzBQF,QAAQ;AAAAmB,EAAA,GAARnB,QAAQ;AAyBhB;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}