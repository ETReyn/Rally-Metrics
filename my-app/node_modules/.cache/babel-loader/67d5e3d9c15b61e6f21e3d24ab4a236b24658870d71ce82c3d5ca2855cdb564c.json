{"ast":null,"code":"var _jsxFileName = \"/Users/ethanreynolds/Documents/Pet Projects/Rally Metrics Front End/my-app/src/component/WorkBreakdown.tsx\",\n  _s = $RefreshSig$();\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\nimport { useState } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\nasync function getData() {\n  _s();\n  const dta = [4, 5, 6];\n  const [graph, setGraph] = useState();\n  const rawData = await fetch('http://127.0.0.1:8000/breakdown').then(response => response.json()).then(d => d);\n\n  // setGraph(rawData)\n  const [data, setData] = useState({\n    //@ts-ignore\n    labels: graph.map(point => point.name),\n    datasets: [{\n      label: ' Average Velocity',\n      //@ts-ignore\n      data: graph.map(item => item.FEATURE[1]),\n      backgroundColor: ['rgb(153, 102, 255)'],\n      borderColor: ['rgb(153, 102, 0)'],\n      borderWidth: 1\n    }]\n  });\n  const returnData = await rawData.json();\n}\n_s(getData, \"0tT4GjfiSAOq+112jW9yGb/YyBc=\");\nexport const WorkBreakdown = () => {\n  const data = getData().json();\n  return /*#__PURE__*/_jsxDEV(Bar, {\n    data: data\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 12\n  }, this);\n};\n_c = WorkBreakdown;\nvar _c;\n$RefreshReg$(_c, \"WorkBreakdown\");","map":{"version":3,"names":["Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","useState","Bar","jsxDEV","_jsxDEV","register","getData","_s","dta","graph","setGraph","rawData","fetch","then","response","json","d","data","setData","labels","map","point","name","datasets","label","item","FEATURE","backgroundColor","borderColor","borderWidth","returnData","WorkBreakdown","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ethanreynolds/Documents/Pet Projects/Rally Metrics Front End/my-app/src/component/WorkBreakdown.tsx"],"sourcesContent":["import {\n    Chart as ChartJS,\n    CategoryScale,\n    LinearScale,\n    BarElement,\n    Title,\n    Tooltip,\n    Legend,\n} from 'chart.js';\nimport { useEffect, useState } from 'react';\nimport { Bar, Pie } from 'react-chartjs-2';\n\nChartJS.register(\n    CategoryScale,\n    LinearScale,\n    BarElement,\n    Title,\n    Tooltip,\n    Legend\n);\n\ninterface graphInterface {\n    FEATURE: number[],\n    DEFECT: number[],\n    ENHANCEMENT: number[],\n    STABILIZATION: number[],\n    SECURITY: number[],\n    name: string\n}\n\ninterface graphVisuals {\n    labels: string[],\n    datasets: {}\n}\n\nasync function getData() {\n    const dta = [4, 5, 6]\n    const [graph, setGraph] = useState<graphInterface[]>()\n    const rawData = await fetch('http://127.0.0.1:8000/breakdown')\n        .then(response => response.json())\n        .then(d => d)\n\n    // setGraph(rawData)\n    const [data, setData] = useState({\n        //@ts-ignore\n        labels: graph.map(point => point.name),\n        datasets: [{\n            label: ' Average Velocity',\n            //@ts-ignore\n            data: graph.map(item => item.FEATURE[1]),\n            backgroundColor: [\n                'rgb(153, 102, 255)'\n            ],\n            borderColor: [\n                'rgb(153, 102, 0)'\n            ],\n            borderWidth: 1,\n        }]\n    });\n    const returnData = await rawData.json();\n}\nexport const WorkBreakdown: React.FC<{}> = () => {\n\n    const data = getData().json()\n    return <Bar data={data} />;\n}\n"],"mappings":";;AAAA,SACIA,KAAK,IAAIC,OAAO,EAChBC,aAAa,EACbC,WAAW,EACXC,UAAU,EACVC,KAAK,EACLC,OAAO,EACPC,MAAM,QACH,UAAU;AACjB,SAAoBC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,GAAG,QAAa,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3CV,OAAO,CAACW,QAAQ,CACZV,aAAa,EACbC,WAAW,EACXC,UAAU,EACVC,KAAK,EACLC,OAAO,EACPC,MAAM,CACT;AAgBD,eAAeM,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAMC,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACrB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,EAAoB;EACtD,MAAMU,OAAO,GAAG,MAAMC,KAAK,CAAC,iCAAiC,CAAC,CACzDC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACjCF,IAAI,CAACG,CAAC,IAAIA,CAAC,CAAC;;EAEjB;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGjB,QAAQ,CAAC;IAC7B;IACAkB,MAAM,EAAEV,KAAK,CAACW,GAAG,CAACC,KAAK,IAAIA,KAAK,CAACC,IAAI,CAAC;IACtCC,QAAQ,EAAE,CAAC;MACPC,KAAK,EAAE,mBAAmB;MAC1B;MACAP,IAAI,EAAER,KAAK,CAACW,GAAG,CAACK,IAAI,IAAIA,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC,CAAC;MACxCC,eAAe,EAAE,CACb,oBAAoB,CACvB;MACDC,WAAW,EAAE,CACT,kBAAkB,CACrB;MACDC,WAAW,EAAE;IACjB,CAAC;EACL,CAAC,CAAC;EACF,MAAMC,UAAU,GAAG,MAAMnB,OAAO,CAACI,IAAI,EAAE;AAC3C;AAACR,EAAA,CAzBcD,OAAO;AA0BtB,OAAO,MAAMyB,aAA2B,GAAGA,CAAA,KAAM;EAE7C,MAAMd,IAAI,GAAGX,OAAO,EAAE,CAACS,IAAI,EAAE;EAC7B,oBAAOX,OAAA,CAACF,GAAG;IAACe,IAAI,EAAEA;EAAK;IAAAe,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAG;AAC9B,CAAC;AAAAC,EAAA,GAJYL,aAA2B;AAAA,IAAAK,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}