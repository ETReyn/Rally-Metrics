{"ast":null,"code":"import{Chart as ChartJS,CategoryScale,LinearScale,BarElement,Title,Tooltip,Legend}from'chart.js';import{Bar}from'react-chartjs-2';import{jsx as _jsx}from\"react/jsx-runtime\";ChartJS.register(CategoryScale,LinearScale,BarElement,Title,Tooltip,Legend);export function WorkBreakdownByIteration(d){var data={labels:d.storyType,datasets:[{label:'Work Breakdown By Story',data:d.totalStories,// you can set indiviual colors for each bar\nbackgroundColor:['rgba(255, 99, 132, 0.2)','rgba(255, 159, 64, 0.2)','rgba(255, 205, 86, 0.2)','rgba(75, 192, 192, 0.2)','rgba(54, 162, 235, 0.2)','rgba(153, 102, 255, 0.2)','rgba(201, 203, 207, 0.2)'],borderColor:['rgb(255, 99, 132)','rgb(255, 159, 64)','rgb(255, 205, 86)','rgb(75, 192, 192)','rgb(54, 162, 235)','rgb(153, 102, 255)','rgb(201, 203, 207)'],borderWidth:1},{label:'Work Breakdown By Points',data:d.totalPoints,// you can set indiviual colors for each bar\nbackgroundColor:['rgba(255, 99, 132, 0.2)','rgba(255, 159, 64, 0.2)','rgba(255, 205, 86, 0.2)','rgba(75, 192, 192, 0.2)','rgba(54, 162, 235, 0.2)','rgba(153, 102, 255, 0.2)','rgba(201, 203, 207, 0.2)'],borderColor:['rgb(255, 99, 132)','rgb(255, 159, 64)','rgb(255, 205, 86)','rgb(75, 192, 192)','rgb(54, 162, 235)','rgb(153, 102, 255)','rgb(201, 203, 207)'],borderWidth:1}]};return/*#__PURE__*/_jsx(Bar,{data:data});};","map":{"version":3,"names":["Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","Bar","jsx","_jsx","register","WorkBreakdownByIteration","d","data","labels","storyType","datasets","label","totalStories","backgroundColor","borderColor","borderWidth","totalPoints"],"sources":["/Users/ethanreynolds/Documents/Pet Projects/Rally-Metrics/my-app/src/component/WorkBreakdown.tsx"],"sourcesContent":["import {\n    Chart as ChartJS,\n    CategoryScale,\n    LinearScale,\n    BarElement,\n    Title,\n    Tooltip,\n    Legend,\n} from 'chart.js';\nimport { useEffect, useState } from 'react';\nimport { Bar } from 'react-chartjs-2';\n\nChartJS.register(\n    CategoryScale,\n    LinearScale,\n    BarElement,\n    Title,\n    Tooltip,\n    Legend\n);\n\ninterface graphInterface {\n    storyType: string[],\n    totalStories: number[],\n    totalPoints: number[],\n}\n\nexport function WorkBreakdownByIteration(d: graphInterface) {\n\n    const data = {\n        labels: d.storyType,\n        datasets: [\n            {\n                label: 'Work Breakdown By Story',\n                data: d.totalStories,\n                // you can set indiviual colors for each bar\n                backgroundColor: [\n                    'rgba(255, 99, 132, 0.2)',\n                    'rgba(255, 159, 64, 0.2)',\n                    'rgba(255, 205, 86, 0.2)',\n                    'rgba(75, 192, 192, 0.2)',\n                    'rgba(54, 162, 235, 0.2)',\n                    'rgba(153, 102, 255, 0.2)',\n                    'rgba(201, 203, 207, 0.2)'\n                ],\n                borderColor: [\n                    'rgb(255, 99, 132)',\n                    'rgb(255, 159, 64)',\n                    'rgb(255, 205, 86)',\n                    'rgb(75, 192, 192)',\n                    'rgb(54, 162, 235)',\n                    'rgb(153, 102, 255)',\n                    'rgb(201, 203, 207)'\n                ],\n                borderWidth: 1,\n            },\n            {\n                label: 'Work Breakdown By Points',\n                data: d.totalPoints,\n                // you can set indiviual colors for each bar\n                backgroundColor: [\n                    'rgba(255, 99, 132, 0.2)',\n                    'rgba(255, 159, 64, 0.2)',\n                    'rgba(255, 205, 86, 0.2)',\n                    'rgba(75, 192, 192, 0.2)',\n                    'rgba(54, 162, 235, 0.2)',\n                    'rgba(153, 102, 255, 0.2)',\n                    'rgba(201, 203, 207, 0.2)'\n                ],\n                borderColor: [\n                    'rgb(255, 99, 132)',\n                    'rgb(255, 159, 64)',\n                    'rgb(255, 205, 86)',\n                    'rgb(75, 192, 192)',\n                    'rgb(54, 162, 235)',\n                    'rgb(153, 102, 255)',\n                    'rgb(201, 203, 207)'\n                ],\n                borderWidth: 1,\n            }\n        ]\n    };\n\n    return <Bar data={data} />;\n};"],"mappings":"AAAA,OACIA,KAAK,GAAI,CAAAC,OAAO,CAChBC,aAAa,CACbC,WAAW,CACXC,UAAU,CACVC,KAAK,CACLC,OAAO,CACPC,MAAM,KACH,UAAU,CAEjB,OAASC,GAAG,KAAQ,iBAAiB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEtCT,OAAO,CAACU,QAAQ,CACZT,aAAa,CACbC,WAAW,CACXC,UAAU,CACVC,KAAK,CACLC,OAAO,CACPC,MAAM,CACT,CAQD,MAAO,SAAS,CAAAK,wBAAwBA,CAACC,CAAiB,CAAE,CAExD,GAAM,CAAAC,IAAI,CAAG,CACTC,MAAM,CAAEF,CAAC,CAACG,SAAS,CACnBC,QAAQ,CAAE,CACN,CACIC,KAAK,CAAE,yBAAyB,CAChCJ,IAAI,CAAED,CAAC,CAACM,YAAY,CACpB;AACAC,eAAe,CAAE,CACb,yBAAyB,CACzB,yBAAyB,CACzB,yBAAyB,CACzB,yBAAyB,CACzB,yBAAyB,CACzB,0BAA0B,CAC1B,0BAA0B,CAC7B,CACDC,WAAW,CAAE,CACT,mBAAmB,CACnB,mBAAmB,CACnB,mBAAmB,CACnB,mBAAmB,CACnB,mBAAmB,CACnB,oBAAoB,CACpB,oBAAoB,CACvB,CACDC,WAAW,CAAE,CACjB,CAAC,CACD,CACIJ,KAAK,CAAE,0BAA0B,CACjCJ,IAAI,CAAED,CAAC,CAACU,WAAW,CACnB;AACAH,eAAe,CAAE,CACb,yBAAyB,CACzB,yBAAyB,CACzB,yBAAyB,CACzB,yBAAyB,CACzB,yBAAyB,CACzB,0BAA0B,CAC1B,0BAA0B,CAC7B,CACDC,WAAW,CAAE,CACT,mBAAmB,CACnB,mBAAmB,CACnB,mBAAmB,CACnB,mBAAmB,CACnB,mBAAmB,CACnB,oBAAoB,CACpB,oBAAoB,CACvB,CACDC,WAAW,CAAE,CACjB,CAAC,CAET,CAAC,CAED,mBAAOZ,IAAA,CAACF,GAAG,EAACM,IAAI,CAAEA,IAAK,EAAG,CAC9B,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}