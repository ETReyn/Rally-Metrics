{"ast":null,"code":"var _jsxFileName = \"/Users/ethanreynolds/Documents/Pet Projects/Rally Metrics Front End/my-app/src/component/Bar.tsx\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\nimport { Bar } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\nexport const BarGraph = grap => {\n  // const dta = [4, 5, 6]\n  // const [graph, setGraph] = useState<graphInterface[]>([])\n  const graph = [grap];\n  const data = {\n    labels: [1, 2, 3],\n    datasets: [{\n      label: 'Popularity of colours',\n      data: grap,\n      // you can set indiviual colors for each bar\n      backgroundColor: ['rgba(255, 255, 255, 0.6)', 'rgba(255, 255, 255, 0.6)', 'rgba(255, 255, 255, 0.6)'],\n      borderWidth: 1\n    }]\n  };\n  const test = 1;\n  console.log(grap);\n  return /*#__PURE__*/_jsxDEV(Bar, {\n    data: data\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 12\n  }, this);\n};\n_c = BarGraph;\nvar _c;\n$RefreshReg$(_c, \"BarGraph\");","map":{"version":3,"names":["Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","Bar","jsxDEV","_jsxDEV","register","BarGraph","grap","graph","data","labels","datasets","label","backgroundColor","borderWidth","test","console","log","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ethanreynolds/Documents/Pet Projects/Rally Metrics Front End/my-app/src/component/Bar.tsx"],"sourcesContent":["import {\n    Chart as ChartJS,\n    CategoryScale,\n    LinearScale,\n    BarElement,\n    Title,\n    Tooltip,\n    Legend,\n} from 'chart.js';\nimport { useEffect, useState } from 'react';\nimport { Bar } from 'react-chartjs-2';\n\nChartJS.register(\n    CategoryScale,\n    LinearScale,\n    BarElement,\n    Title,\n    Tooltip,\n    Legend\n);\n\ninterface graphData {\n    data: [string]\n    label: [number]\n}\ninterface graphInterface {\n    id?: number,\n    velocity?: number\n}\n\ninterface graphVisuals {\n    labels: [],\n    datasets: []\n}\nexport const BarGraph: React.FC<any> = (grap) => {\n\n    // const dta = [4, 5, 6]\n    // const [graph, setGraph] = useState<graphInterface[]>([])\n    const graph = [grap]\n    const data = {\n        labels: [1, 2, 3],\n        datasets: [\n            {\n                label: 'Popularity of colours',\n                data: grap,\n                // you can set indiviual colors for each bar\n                backgroundColor: [\n                    'rgba(255, 255, 255, 0.6)',\n                    'rgba(255, 255, 255, 0.6)',\n                    'rgba(255, 255, 255, 0.6)'\n                ],\n                borderWidth: 1,\n            }]\n    };\n    const test = 1\n    console.log(grap)\n\n    return <Bar data={data} />;\n};\n\n"],"mappings":";AAAA,SACIA,KAAK,IAAIC,OAAO,EAChBC,aAAa,EACbC,WAAW,EACXC,UAAU,EACVC,KAAK,EACLC,OAAO,EACPC,MAAM,QACH,UAAU;AAEjB,SAASC,GAAG,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtCT,OAAO,CAACU,QAAQ,CACZT,aAAa,EACbC,WAAW,EACXC,UAAU,EACVC,KAAK,EACLC,OAAO,EACPC,MAAM,CACT;AAeD,OAAO,MAAMK,QAAuB,GAAIC,IAAI,IAAK;EAE7C;EACA;EACA,MAAMC,KAAK,GAAG,CAACD,IAAI,CAAC;EACpB,MAAME,IAAI,GAAG;IACTC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACjBC,QAAQ,EAAE,CACN;MACIC,KAAK,EAAE,uBAAuB;MAC9BH,IAAI,EAAEF,IAAI;MACV;MACAM,eAAe,EAAE,CACb,0BAA0B,EAC1B,0BAA0B,EAC1B,0BAA0B,CAC7B;MACDC,WAAW,EAAE;IACjB,CAAC;EACT,CAAC;EACD,MAAMC,IAAI,GAAG,CAAC;EACdC,OAAO,CAACC,GAAG,CAACV,IAAI,CAAC;EAEjB,oBAAOH,OAAA,CAACF,GAAG;IAACO,IAAI,EAAEA;EAAK;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAG;AAC9B,CAAC;AAACC,EAAA,GAxBWhB,QAAuB;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}