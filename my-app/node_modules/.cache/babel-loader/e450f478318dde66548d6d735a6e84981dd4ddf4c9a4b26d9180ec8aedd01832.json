{"ast":null,"code":"var _jsxFileName = \"/Users/ethanreynolds/Documents/Pet Projects/Rally Metrics Front End/my-app/src/component/Bar.tsx\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\nimport { Bar } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\nexport function BarGraph(d) {\n  const data = {\n    labels: d.id,\n    datasets: [{\n      label: 'User Velocity',\n      data: d.velocity,\n      // you can set indiviual colors for each bar\n      backgroundColor: ['rgba(255, 99, 132, 0.2)', 'rgba(255, 159, 64, 0.2)', 'rgba(255, 205, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(201, 203, 207, 0.2)'],\n      borderColor: ['rgb(255, 99, 132)', 'rgb(255, 159, 64)', 'rgb(255, 205, 86)', 'rgb(75, 192, 192)', 'rgb(54, 162, 235)', 'rgb(153, 102, 255)', 'rgb(201, 203, 207)'],\n      borderWidth: 1\n    }]\n  };\n  // console.log(y)\n\n  if (d.id[0] === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading Data...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        alt: \"\",\n        width: \"700\",\n        height: \"525\",\n        loading: \"lazy\",\n        role: \"presentation\",\n        src: \"https://miro.medium.com/v2/resize:fit:1400/1*e_Loq49BI4WmN7o9ItTADg.gif\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Bar, {\n    data: data\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 12\n  }, this);\n}\n_c = BarGraph;\n;\nvar _c;\n$RefreshReg$(_c, \"BarGraph\");","map":{"version":3,"names":["Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","Bar","jsxDEV","_jsxDEV","register","BarGraph","d","data","labels","id","datasets","label","velocity","backgroundColor","borderColor","borderWidth","children","fileName","_jsxFileName","lineNumber","columnNumber","alt","width","height","loading","role","src","_c","$RefreshReg$"],"sources":["/Users/ethanreynolds/Documents/Pet Projects/Rally Metrics Front End/my-app/src/component/Bar.tsx"],"sourcesContent":["import {\n    Chart as ChartJS,\n    CategoryScale,\n    LinearScale,\n    BarElement,\n    Title,\n    Tooltip,\n    Legend,\n} from 'chart.js';\nimport { useEffect, useState } from 'react';\nimport { Bar } from 'react-chartjs-2';\n\nChartJS.register(\n    CategoryScale,\n    LinearScale,\n    BarElement,\n    Title,\n    Tooltip,\n    Legend\n);\n\ninterface graphInterface {\n    id: number[],\n    velocity: number[]\n}\n\nexport function BarGraph(d: graphInterface) {\n\n\n    const data = {\n        labels: d.id,\n        datasets: [\n            {\n                label: 'User Velocity',\n                data: d.velocity,\n                // you can set indiviual colors for each bar\n                backgroundColor: [\n                    'rgba(255, 99, 132, 0.2)',\n                    'rgba(255, 159, 64, 0.2)',\n                    'rgba(255, 205, 86, 0.2)',\n                    'rgba(75, 192, 192, 0.2)',\n                    'rgba(54, 162, 235, 0.2)',\n                    'rgba(153, 102, 255, 0.2)',\n                    'rgba(201, 203, 207, 0.2)'\n                ],\n                borderColor: [\n                    'rgb(255, 99, 132)',\n                    'rgb(255, 159, 64)',\n                    'rgb(255, 205, 86)',\n                    'rgb(75, 192, 192)',\n                    'rgb(54, 162, 235)',\n                    'rgb(153, 102, 255)',\n                    'rgb(201, 203, 207)'\n                ],\n                borderWidth: 1,\n            }]\n    };\n    // console.log(y)\n\n    if (d.id[0] === 0) {\n        return (\n            <div>\n                <div>Loading Data...</div>\n                <img alt=\"\" width=\"700\" height=\"525\" loading=\"lazy\" role=\"presentation\" src=\"https://miro.medium.com/v2/resize:fit:1400/1*e_Loq49BI4WmN7o9ItTADg.gif\" />\n            </div>)\n    }\n\n    return <Bar data={data} />;\n};\n\n"],"mappings":";AAAA,SACIA,KAAK,IAAIC,OAAO,EAChBC,aAAa,EACbC,WAAW,EACXC,UAAU,EACVC,KAAK,EACLC,OAAO,EACPC,MAAM,QACH,UAAU;AAEjB,SAASC,GAAG,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtCT,OAAO,CAACU,QAAQ,CACZT,aAAa,EACbC,WAAW,EACXC,UAAU,EACVC,KAAK,EACLC,OAAO,EACPC,MAAM,CACT;AAOD,OAAO,SAASK,QAAQA,CAACC,CAAiB,EAAE;EAGxC,MAAMC,IAAI,GAAG;IACTC,MAAM,EAAEF,CAAC,CAACG,EAAE;IACZC,QAAQ,EAAE,CACN;MACIC,KAAK,EAAE,eAAe;MACtBJ,IAAI,EAAED,CAAC,CAACM,QAAQ;MAChB;MACAC,eAAe,EAAE,CACb,yBAAyB,EACzB,yBAAyB,EACzB,yBAAyB,EACzB,yBAAyB,EACzB,yBAAyB,EACzB,0BAA0B,EAC1B,0BAA0B,CAC7B;MACDC,WAAW,EAAE,CACT,mBAAmB,EACnB,mBAAmB,EACnB,mBAAmB,EACnB,mBAAmB,EACnB,mBAAmB,EACnB,oBAAoB,EACpB,oBAAoB,CACvB;MACDC,WAAW,EAAE;IACjB,CAAC;EACT,CAAC;EACD;;EAEA,IAAIT,CAAC,CAACG,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;IACf,oBACIN,OAAA;MAAAa,QAAA,gBACIb,OAAA;QAAAa,QAAA,EAAK;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAM,eAC1BjB,OAAA;QAAKkB,GAAG,EAAC,EAAE;QAACC,KAAK,EAAC,KAAK;QAACC,MAAM,EAAC,KAAK;QAACC,OAAO,EAAC,MAAM;QAACC,IAAI,EAAC,cAAc;QAACC,GAAG,EAAC;MAAyE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACtJ;EACd;EAEA,oBAAOjB,OAAA,CAACF,GAAG;IAACM,IAAI,EAAEA;EAAK;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAG;AAC9B;AAACO,EAAA,GA1CetB,QAAQ;AA0CvB;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}