{"ast":null,"code":"var _jsxFileName = \"/Users/ethanreynolds/Documents/Pet Projects/Rally Metrics Front End/my-app/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState } from 'react';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip } from 'chart.js';\nimport './App.css';\nimport { WorkBreakdownByIteration } from './component/WorkBreakdown';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip);\nfunction App() {\n  _s();\n  const c = {\n    storyType: '0',\n    totalStories: 0,\n    totalPoints: 0\n  };\n  // USER VELOCITY\n  // const [data, setData] = useState<graphInterface[]>([c])\n  // // const result = fetch('http://127.0.0.1:8000/breakdown/499934195612').then(resp => resp.json()).then(json => setData(json))\n  // const [x, setX] = useState<number[]>(data.map(d => d.id))\n  // const [y, setY] = useState<number[]>(data.map(d => d.velocity))\n\n  // useEffect(() => {\n  //   setX(data.map(d => d.id))\n  //   setY(data.map(d => d.velocity))\n  // }, [data])\n\n  const [data, setData] = useState([c]);\n  const [x, setX] = useState(data.map(d => d.storyType));\n  const [y, setY] = useState(data.map(d => d.totalStories));\n  const [y1, setY1] = useState(data.map(d => d.totalPoints));\n  let arr1 = [];\n  let arr3 = [];\n  let arr2 = [];\n\n  // setInterval(() => {\n  //   // fetch('http://127.0.0.1:8000/breakdown/499934195612').then(resp => resp.json()).then(json => setData(json));\n  // }, 1000)\n  fetch('http://127.0.0.1:8000/breakdown/499934195612', {\n    method: 'GET',\n    headers: {\n      accept: 'application/json'\n    }\n  });\n  // useEffect(() => {\n\n  //   data.map(d => {\n  //     arr1.push(d.totalStories);\n  //     arr3.push(d.totalPoints);\n  //     arr2.push(d.storyType)\n  //   })\n  //   setY(arr1);\n  //   setX(arr2);\n  //   setY1(arr3);\n  // }, [data])\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [\"Iteration Data\", /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(WorkBreakdownByIteration, {\n        storyType: x,\n        totalStories: y,\n        totalPoints: y1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"+YaRkTKdvObRs5n2/4VBxPa6Y2A=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","WorkBreakdownByIteration","jsxDEV","_jsxDEV","register","App","_s","c","storyType","totalStories","totalPoints","data","setData","x","setX","map","d","y","setY","y1","setY1","arr1","arr3","arr2","fetch","method","headers","accept","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ethanreynolds/Documents/Pet Projects/Rally Metrics Front End/my-app/src/App.tsx"],"sourcesContent":["import React, { useRef } from 'react';\nimport { useEffect, useState } from 'react';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n} from 'chart.js';\nimport './App.css';\nimport { UserVelocity } from './component/Bar';\nimport { WorkBreakdownByIteration } from './component/WorkBreakdown';\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip\n);\n\ninterface graphInterface {\n  storyType: string,\n  totalStories: number\n  totalPoints: number\n}\n\nfunction App() {\n\n  const c: graphInterface = {\n    storyType: '0',\n    totalStories: 0,\n    totalPoints: 0\n\n  }\n  // USER VELOCITY\n  // const [data, setData] = useState<graphInterface[]>([c])\n  // // const result = fetch('http://127.0.0.1:8000/breakdown/499934195612').then(resp => resp.json()).then(json => setData(json))\n  // const [x, setX] = useState<number[]>(data.map(d => d.id))\n  // const [y, setY] = useState<number[]>(data.map(d => d.velocity))\n\n  // useEffect(() => {\n  //   setX(data.map(d => d.id))\n  //   setY(data.map(d => d.velocity))\n  // }, [data])\n\n  const [data, setData] = useState<graphInterface[]>([c]);\n  const [x, setX] = useState<string[]>(data.map(d => d.storyType))\n  const [y, setY] = useState<number[]>(data.map(d => d.totalStories))\n  const [y1, setY1] = useState<number[]>(data.map(d => d.totalPoints))\n\n  let arr1: number[] = [];\n  let arr3: number[] = [];\n  let arr2: string[] = [];\n\n  // setInterval(() => {\n  //   // fetch('http://127.0.0.1:8000/breakdown/499934195612').then(resp => resp.json()).then(json => setData(json));\n  // }, 1000)\n  fetch('http://127.0.0.1:8000/breakdown/499934195612', {\n    method: 'GET',\n    headers: {\n      accept: 'application/json',\n    },\n  });\n  // useEffect(() => {\n\n  //   data.map(d => {\n  //     arr1.push(d.totalStories);\n  //     arr3.push(d.totalPoints);\n  //     arr2.push(d.storyType)\n  //   })\n  //   setY(arr1);\n  //   setX(arr2);\n  //   setY1(arr3);\n  // }, [data])\n\n  return (\n    <div className=\"App\">\n      Iteration Data\n      <div>\n        <WorkBreakdownByIteration\n          storyType={x}\n          totalStories={y}\n          totalPoints={y1} />\n      </div>\n      <div>\n\n      </div>\n\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAkB,OAAO;AACrC,SAAoBC,QAAQ,QAAQ,OAAO;AAC3C,SACEC,KAAK,IAAIC,OAAO,EAChBC,aAAa,EACbC,WAAW,EACXC,UAAU,EACVC,KAAK,EACLC,OAAO,QACF,UAAU;AACjB,OAAO,WAAW;AAElB,SAASC,wBAAwB,QAAQ,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErER,OAAO,CAACS,QAAQ,CACdR,aAAa,EACbC,WAAW,EACXC,UAAU,EACVC,KAAK,EACLC,OAAO,CACR;AAQD,SAASK,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb,MAAMC,CAAiB,GAAG;IACxBC,SAAS,EAAE,GAAG;IACdC,YAAY,EAAE,CAAC;IACfC,WAAW,EAAE;EAEf,CAAC;EACD;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGnB,QAAQ,CAAmB,CAACc,CAAC,CAAC,CAAC;EACvD,MAAM,CAACM,CAAC,EAAEC,IAAI,CAAC,GAAGrB,QAAQ,CAAWkB,IAAI,CAACI,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACR,SAAS,CAAC,CAAC;EAChE,MAAM,CAACS,CAAC,EAAEC,IAAI,CAAC,GAAGzB,QAAQ,CAAWkB,IAAI,CAACI,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACP,YAAY,CAAC,CAAC;EACnE,MAAM,CAACU,EAAE,EAAEC,KAAK,CAAC,GAAG3B,QAAQ,CAAWkB,IAAI,CAACI,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACN,WAAW,CAAC,CAAC;EAEpE,IAAIW,IAAc,GAAG,EAAE;EACvB,IAAIC,IAAc,GAAG,EAAE;EACvB,IAAIC,IAAc,GAAG,EAAE;;EAEvB;EACA;EACA;EACAC,KAAK,CAAC,8CAA8C,EAAE;IACpDC,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACPC,MAAM,EAAE;IACV;EACF,CAAC,CAAC;EACF;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACExB,OAAA;IAAKyB,SAAS,EAAC,KAAK;IAAAC,QAAA,GAAC,gBAEnB,eAAA1B,OAAA;MAAA0B,QAAA,eACE1B,OAAA,CAACF,wBAAwB;QACvBO,SAAS,EAAEK,CAAE;QACbJ,YAAY,EAAEQ,CAAE;QAChBP,WAAW,EAAES;MAAG;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAG;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACjB,eACN9B,OAAA;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAEM;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAEF;AAEV;AAAC3B,EAAA,CAhEQD,GAAG;AAAA6B,EAAA,GAAH7B,GAAG;AAkEZ,eAAeA,GAAG;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}