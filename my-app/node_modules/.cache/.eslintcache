[{"/Users/ethanreynolds/Documents/Pet Projects/Rally-Metrics/my-app/src/index.tsx":"1","/Users/ethanreynolds/Documents/Pet Projects/Rally-Metrics/my-app/src/reportWebVitals.ts":"2","/Users/ethanreynolds/Documents/Pet Projects/Rally-Metrics/my-app/src/App.tsx":"3","/Users/ethanreynolds/Documents/Pet Projects/Rally-Metrics/my-app/src/Data.tsx":"4","/Users/ethanreynolds/Documents/Pet Projects/Rally-Metrics/my-app/src/component/HistoricalWorkBreakdown.tsx":"5","/Users/ethanreynolds/Documents/Pet Projects/Rally-Metrics/my-app/src/component/Bar.tsx":"6","/Users/ethanreynolds/Documents/Pet Projects/Rally-Metrics/my-app/src/component/WorkBreakdown.tsx":"7","/Users/ethanreynolds/Documents/Pet Projects/Rally-Metrics/my-app/src/component/Velocity/Velocity.tsx":"8","/Users/ethanreynolds/Documents/Pet Projects/Rally-Metrics/my-app/src/api/api.ts":"9","/Users/ethanreynolds/Documents/Pet Projects/Rally-Metrics/my-app/src/component/Breakdown/Breakdown.tsx":"10","/Users/ethanreynolds/Documents/Pet Projects/Rally-Metrics/my-app/src/component/History/History.tsx":"11"},{"size":554,"mtime":1682267578845,"results":"12","hashOfConfig":"13"},{"size":425,"mtime":1682267578845,"results":"14","hashOfConfig":"13"},{"size":774,"mtime":1690930081101,"results":"15","hashOfConfig":"13"},{"size":1282,"mtime":1690930033562,"results":"16","hashOfConfig":"13"},{"size":4149,"mtime":1690929890361,"results":"17","hashOfConfig":"13"},{"size":2551,"mtime":1683990638439,"results":"18","hashOfConfig":"13"},{"size":2488,"mtime":1683848699828,"results":"19","hashOfConfig":"13"},{"size":1674,"mtime":1690930464088,"results":"20","hashOfConfig":"13"},{"size":914,"mtime":1690929519026,"results":"21","hashOfConfig":"13"},{"size":2338,"mtime":1690930591757,"results":"22","hashOfConfig":"13"},{"size":3879,"mtime":1690930669176,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"damo76",{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"27"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"27"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/ethanreynolds/Documents/Pet Projects/Rally-Metrics/my-app/src/index.tsx",[],[],[],"/Users/ethanreynolds/Documents/Pet Projects/Rally-Metrics/my-app/src/reportWebVitals.ts",[],[],"/Users/ethanreynolds/Documents/Pet Projects/Rally-Metrics/my-app/src/App.tsx",[],[],"/Users/ethanreynolds/Documents/Pet Projects/Rally-Metrics/my-app/src/Data.tsx",["60","61","62","63","64","65","66","67","68"],[],"/Users/ethanreynolds/Documents/Pet Projects/Rally-Metrics/my-app/src/component/HistoricalWorkBreakdown.tsx",["69","70","71","72","73","74","75","76"],[],"/Users/ethanreynolds/Documents/Pet Projects/Rally-Metrics/my-app/src/component/Bar.tsx",["77","78"],[],"import {\n    Chart as ChartJS,\n    CategoryScale,\n    LinearScale,\n    BarElement,\n    Title,\n    Tooltip,\n    Legend,\n} from 'chart.js';\nimport { useEffect, useState } from 'react';\nimport { Bar } from 'react-chartjs-2';\n\nChartJS.register(\n    CategoryScale,\n    LinearScale,\n    BarElement,\n    Title,\n    Tooltip,\n    Legend\n);\n\ninterface graphInterface {\n    id: number[],\n    velocity: number[],\n    capacity: number[]\n}\n\nexport function UserVelocity(inputData: graphInterface) {\n\n    const velocity = inputData.velocity\n    const capacity = inputData.capacity\n    const ids = inputData.id\n\n    const data = {\n        labels: ids,\n        datasets: [\n            {\n                label: 'User Velocity',\n                data: velocity,\n                // you can set indiviual colors for each bar\n                backgroundColor: [\n                    'rgba(255, 99, 132, 0.2)',\n                    'rgba(255, 159, 64, 0.2)',\n                    'rgba(255, 205, 86, 0.2)',\n                    'rgba(75, 192, 192, 0.2)',\n                    'rgba(54, 162, 235, 0.2)',\n                    'rgba(153, 102, 255, 0.2)',\n                    'rgba(201, 203, 207, 0.2)'\n                ],\n                borderColor: [\n                    'rgb(255, 99, 132)',\n                    'rgb(255, 159, 64)',\n                    'rgb(255, 205, 86)',\n                    'rgb(75, 192, 192)',\n                    'rgb(54, 162, 235)',\n                    'rgb(153, 102, 255)',\n                    'rgb(201, 203, 207)'\n                ],\n                borderWidth: 2,\n            }, {\n                label: 'User Capacity',\n                data: capacity,\n                // you can set indiviual colors for each bar\n                backgroundColor: [\n                    'rgba(255, 99, 132, 0.2)',\n                    'rgba(255, 159, 64, 0.2)',\n                    'rgba(255, 205, 86, 0.2)',\n                    'rgba(75, 192, 192, 0.2)',\n                    'rgba(54, 162, 235, 0.2)',\n                    'rgba(153, 102, 255, 0.2)',\n                    'rgba(201, 203, 207, 0.2)'\n                ],\n                borderColor: [\n                    'rgb(255, 99, 132)',\n                    'rgb(255, 159, 64)',\n                    'rgb(255, 205, 86)',\n                    'rgb(75, 192, 192)',\n                    'rgb(54, 162, 235)',\n                    'rgb(153, 102, 255)',\n                    'rgb(201, 203, 207)'\n                ],\n                borderWidth: 2,\n            }\n        ]\n    };\n    // console.log(y)\n\n    return <Bar data={data} />;\n};\n\n","/Users/ethanreynolds/Documents/Pet Projects/Rally-Metrics/my-app/src/component/WorkBreakdown.tsx",["79","80"],[],"import {\n    Chart as ChartJS,\n    CategoryScale,\n    LinearScale,\n    BarElement,\n    Title,\n    Tooltip,\n    Legend,\n} from 'chart.js';\nimport { useEffect, useState } from 'react';\nimport { Bar } from 'react-chartjs-2';\n\nChartJS.register(\n    CategoryScale,\n    LinearScale,\n    BarElement,\n    Title,\n    Tooltip,\n    Legend\n);\n\ninterface graphInterface {\n    storyType: string[],\n    totalStories: number[],\n    totalPoints: number[],\n}\n\nexport function WorkBreakdownByIteration(d: graphInterface) {\n\n    const data = {\n        labels: d.storyType,\n        datasets: [\n            {\n                label: 'Work Breakdown By Story',\n                data: d.totalStories,\n                // you can set indiviual colors for each bar\n                backgroundColor: [\n                    'rgba(255, 99, 132, 0.2)',\n                    'rgba(255, 159, 64, 0.2)',\n                    'rgba(255, 205, 86, 0.2)',\n                    'rgba(75, 192, 192, 0.2)',\n                    'rgba(54, 162, 235, 0.2)',\n                    'rgba(153, 102, 255, 0.2)',\n                    'rgba(201, 203, 207, 0.2)'\n                ],\n                borderColor: [\n                    'rgb(255, 99, 132)',\n                    'rgb(255, 159, 64)',\n                    'rgb(255, 205, 86)',\n                    'rgb(75, 192, 192)',\n                    'rgb(54, 162, 235)',\n                    'rgb(153, 102, 255)',\n                    'rgb(201, 203, 207)'\n                ],\n                borderWidth: 1,\n            },\n            {\n                label: 'Work Breakdown By Points',\n                data: d.totalPoints,\n                // you can set indiviual colors for each bar\n                backgroundColor: [\n                    'rgba(255, 99, 132, 0.2)',\n                    'rgba(255, 159, 64, 0.2)',\n                    'rgba(255, 205, 86, 0.2)',\n                    'rgba(75, 192, 192, 0.2)',\n                    'rgba(54, 162, 235, 0.2)',\n                    'rgba(153, 102, 255, 0.2)',\n                    'rgba(201, 203, 207, 0.2)'\n                ],\n                borderColor: [\n                    'rgb(255, 99, 132)',\n                    'rgb(255, 159, 64)',\n                    'rgb(255, 205, 86)',\n                    'rgb(75, 192, 192)',\n                    'rgb(54, 162, 235)',\n                    'rgb(153, 102, 255)',\n                    'rgb(201, 203, 207)'\n                ],\n                borderWidth: 1,\n            }\n        ]\n    };\n\n    return <Bar data={data} />;\n};","/Users/ethanreynolds/Documents/Pet Projects/Rally-Metrics/my-app/src/component/Velocity/Velocity.tsx",["81"],[],"/Users/ethanreynolds/Documents/Pet Projects/Rally-Metrics/my-app/src/api/api.ts",[],[],"/Users/ethanreynolds/Documents/Pet Projects/Rally-Metrics/my-app/src/component/Breakdown/Breakdown.tsx",["82","83","84","85","86"],[],"/Users/ethanreynolds/Documents/Pet Projects/Rally-Metrics/my-app/src/component/History/History.tsx",["87"],[],{"ruleId":"88","severity":1,"message":"89","line":1,"column":17,"nodeType":"90","messageId":"91","endLine":1,"endColumn":23},{"ruleId":"88","severity":1,"message":"92","line":2,"column":10,"nodeType":"90","messageId":"91","endLine":2,"endColumn":19},{"ruleId":"88","severity":1,"message":"93","line":2,"column":21,"nodeType":"90","messageId":"91","endLine":2,"endColumn":29},{"ruleId":"88","severity":1,"message":"94","line":12,"column":10,"nodeType":"90","messageId":"91","endLine":12,"endColumn":22},{"ruleId":"88","severity":1,"message":"95","line":13,"column":10,"nodeType":"90","messageId":"91","endLine":13,"endColumn":34},{"ruleId":"88","severity":1,"message":"96","line":14,"column":10,"nodeType":"90","messageId":"91","endLine":14,"endColumn":33},{"ruleId":"88","severity":1,"message":"97","line":15,"column":10,"nodeType":"90","messageId":"91","endLine":15,"endColumn":18},{"ruleId":"88","severity":1,"message":"98","line":16,"column":10,"nodeType":"90","messageId":"91","endLine":16,"endColumn":38},{"ruleId":"88","severity":1,"message":"99","line":17,"column":10,"nodeType":"90","messageId":"91","endLine":17,"endColumn":26},{"ruleId":"88","severity":1,"message":"100","line":9,"column":5,"nodeType":"90","messageId":"91","endLine":9,"endColumn":10},{"ruleId":"88","severity":1,"message":"101","line":11,"column":10,"nodeType":"90","messageId":"91","endLine":11,"endColumn":27},{"ruleId":"88","severity":1,"message":"92","line":11,"column":29,"nodeType":"90","messageId":"91","endLine":11,"endColumn":38},{"ruleId":"88","severity":1,"message":"93","line":11,"column":40,"nodeType":"90","messageId":"91","endLine":11,"endColumn":48},{"ruleId":"88","severity":1,"message":"102","line":12,"column":10,"nodeType":"90","messageId":"91","endLine":12,"endColumn":14},{"ruleId":"88","severity":1,"message":"103","line":24,"column":11,"nodeType":"90","messageId":"91","endLine":24,"endColumn":21},{"ruleId":"88","severity":1,"message":"104","line":32,"column":11,"nodeType":"90","messageId":"91","endLine":32,"endColumn":25},{"ruleId":"88","severity":1,"message":"105","line":48,"column":11,"nodeType":"90","messageId":"91","endLine":48,"endColumn":16},{"ruleId":"88","severity":1,"message":"92","line":10,"column":10,"nodeType":"90","messageId":"91","endLine":10,"endColumn":19},{"ruleId":"88","severity":1,"message":"93","line":10,"column":21,"nodeType":"90","messageId":"91","endLine":10,"endColumn":29},{"ruleId":"88","severity":1,"message":"92","line":10,"column":10,"nodeType":"90","messageId":"91","endLine":10,"endColumn":19},{"ruleId":"88","severity":1,"message":"93","line":10,"column":21,"nodeType":"90","messageId":"91","endLine":10,"endColumn":29},{"ruleId":"88","severity":1,"message":"103","line":2,"column":20,"nodeType":"90","messageId":"91","endLine":2,"endColumn":30},{"ruleId":"88","severity":1,"message":"96","line":4,"column":10,"nodeType":"90","messageId":"91","endLine":4,"endColumn":33},{"ruleId":"88","severity":1,"message":"106","line":12,"column":12,"nodeType":"90","messageId":"91","endLine":12,"endColumn":27},{"ruleId":"107","severity":1,"message":"108","line":42,"column":8,"nodeType":"109","endLine":42,"endColumn":10,"suggestions":"110"},{"ruleId":"111","severity":1,"message":"112","line":45,"column":19,"nodeType":"113","messageId":"114","endLine":45,"endColumn":21},{"ruleId":"107","severity":1,"message":"115","line":54,"column":8,"nodeType":"109","endLine":54,"endColumn":15,"suggestions":"116"},{"ruleId":"111","severity":1,"message":"112","line":49,"column":20,"nodeType":"113","messageId":"114","endLine":49,"endColumn":22},"@typescript-eslint/no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useState' is defined but never used.","'UserVelocity' is defined but never used.","'WorkBreakdownByIteration' is defined but never used.","'HistoricalWorkBreakdown' is defined but never used.","'velocity' is defined but never used.","'ArrayDestructuringAssignment' is defined but never used.","'NavigateFunction' is defined but never used.","'Chart' is defined but never used.","'MouseEventHandler' is defined but never used.","'Line' is defined but never used.","'handleData' is defined but never used.","'graphInterface' is defined but never used.","'total' is assigned a value but never used.","'recentIteration' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handleHistory'. Either include it or remove the dependency array.","ArrayExpression",["117"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has missing dependencies: 'arr1', 'arr2', and 'arr3'. Either include them or remove the dependency array.",["118"],{"desc":"119","fix":"120"},{"desc":"121","fix":"122"},"Update the dependencies array to be: [handleHistory]",{"range":"123","text":"124"},"Update the dependencies array to be: [arr1, arr2, arr3, data2]",{"range":"125","text":"126"},[1380,1382],"[handleHistory]",[1674,1681],"[arr1, arr2, arr3, data2]"]